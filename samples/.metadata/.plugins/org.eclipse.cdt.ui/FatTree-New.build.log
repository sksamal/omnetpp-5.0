11:41:08 **** Build of configuration gcc-debug for project FatTree-New ****
make MODE=debug CONFIGNAME=gcc-debug all 
cd src && make
make[1]: Entering directory '/home/ssamal/Downloads/omnetpp-5.0/samples/FatTree-New/src'
logic/routing/ConfigRouting.cc
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:14:1: error: expected class-name before ‘{’ token
 {
 ^
logic/routing/ConfigRouting.h:25:32: error: ‘cMessage’ has not been declared
     virtual void handleMessage(cMessage *msg);
                                ^~~~~~~~
logic/routing/ConfigRouting.h:30:35: error: ‘cTopology’ has not been declared
     virtual void addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo);
                                   ^~~~~~~~~
logic/routing/ConfigRouting.h:34:36: error: ‘cTopology’ has not been declared
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo);
                                    ^~~~~~~~~
logic/routing/ConfigRouting.h:38:36: error: ‘cTopology’ has not been declared
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address);
                                    ^~~~~~~~~
In file included from /home/ssamal/Downloads/omnetpp-5.0/include/omnetpp/cobject.h:26:0,
                 from /home/ssamal/Downloads/omnetpp-5.0/include/omnetpp/cnamedobject.h:23,
                 from /home/ssamal/Downloads/omnetpp-5.0/include/omnetpp/cownedobject.h:23,
                 from /home/ssamal/Downloads/omnetpp-5.0/include/omnetpp/carray.h:19,
                 from /home/ssamal/Downloads/omnetpp-5.0/include/omnetpp.h:21,
                 from logic/routing/ConfigRouting.h:8,
                 from logic/routing/ConfigRouting.cc:5:
logic/routing/ConfigRouting.cc: In function ‘omnetpp::cObject* __factoryfunc_13()’:
logic/routing/ConfigRouting.cc:13:15: error: cannot convert ‘ConfigRouting*’ to ‘omnetpp::cModule*’ in initialization
 Define_Module(ConfigRouting);
               ^
/home/ssamal/Downloads/omnetpp-5.0/include/omnetpp/regmacros.h:144:92: note: in definition of macro ‘__REGISTER_CLASS’
   static omnetpp::cObject *MAKE_UNIQUE_WITHIN_FILE(__factoryfunc_)() {BASECLASS *ret = new CLASSNAME; return ret; } \
                                                                                            ^~~~~~~~~
logic/routing/ConfigRouting.cc:13:1: note: in expansion of macro ‘Define_Module’
 Define_Module(ConfigRouting);
 ^~~~~~~~~~~~~
logic/routing/ConfigRouting.cc: In member function ‘virtual void ConfigRouting::initialize(int)’:
logic/routing/ConfigRouting.cc:29:40: error: no matching function for call to ‘ConfigRouting::addDefaultRoutes(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&)’
         addDefaultRoutes(topo, nodeInfo);
                                        ^
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:30:18: note: candidate: virtual void ConfigRouting::addDefaultRoutes(int&, ConfigRouting::NodeInfoVector&)
     virtual void addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:30:18: note:   no known conversion for argument 1 from ‘omnetpp::cTopology’ to ‘int&’
logic/routing/ConfigRouting.cc:32:41: error: no matching function for call to ‘ConfigRouting::fillRoutingTables(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&)’
         fillRoutingTables(topo, nodeInfo);
                                         ^
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:34:18: note: candidate: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:34:18: note:   no known conversion for argument 1 from ‘omnetpp::cTopology’ to ‘int&’
logic/routing/ConfigRouting.h:38:18: note: candidate: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&, const char*, const char*)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:38:18: note:   candidate expects 4 arguments, 2 provided
logic/routing/ConfigRouting.cc: At global scope:
logic/routing/ConfigRouting.cc:36:6: error: prototype for ‘void ConfigRouting::addDefaultRoutes(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&)’ does not match any in class ‘ConfigRouting’
 void ConfigRouting::addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo) {
      ^~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:30:18: error: candidate is: virtual void ConfigRouting::addDefaultRoutes(int&, ConfigRouting::NodeInfoVector&)
     virtual void addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:36:55: error: ‘typedef class std::vector<ConfigRouting::NodeInfo> ConfigRouting::NodeInfoVector’ is protected within this context
 void ConfigRouting::addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo) {
                                                       ^~~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:20:39: note: declared protected here
         typedef std::vector<NodeInfo> NodeInfoVector;
                                       ^~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:81:6: error: prototype for ‘void ConfigRouting::fillRoutingTables(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&)’ does not match any in class ‘ConfigRouting’
 void ConfigRouting::fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo) {
      ^~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:38:18: error: candidates are: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&, const char*, const char*)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:34:18: error:                 virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:81:56: error: ‘typedef class std::vector<ConfigRouting::NodeInfo> ConfigRouting::NodeInfoVector’ is protected within this context
 void ConfigRouting::fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo) {
                                                        ^~~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:20:39: note: declared protected here
         typedef std::vector<NodeInfo> NodeInfoVector;
                                       ^~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:141:6: error: prototype for ‘void ConfigRouting::fillRoutingTables(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&, const char*, const char*)’ does not match any in class ‘ConfigRouting’
 void ConfigRouting::fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address) {
      ^~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:38:18: error: candidates are: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&, const char*, const char*)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:34:18: error:                 virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:141:56: error: ‘typedef class std::vector<ConfigRouting::NodeInfo> ConfigRouting::NodeInfoVector’ is protected within this context
 void ConfigRouting::fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address) {
                                                        ^~~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:20:39: note: declared protected here
         typedef std::vector<NodeInfo> NodeInfoVector;
                                       ^~~~~~~~~~~~~~
logic/routing/ConfigRouting.cc:211:6: error: prototype for ‘void ConfigRouting::handleMessage(omnetpp::cMessage*)’ does not match any in class ‘ConfigRouting’
 void ConfigRouting::handleMessage(cMessage *msg)
      ^~~~~~~~~~~~~
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:25:18: error: candidate is: virtual void ConfigRouting::handleMessage(int*)
     virtual void handleMessage(cMessage *msg);
                  ^~~~~~~~~~~~~
logic/routing/ConfigRouting.cc: In member function ‘virtual void ConfigRouting::refreshRoutingTables(const char*, const char*)’:
logic/routing/ConfigRouting.cc:229:36: error: no matching function for call to ‘ConfigRouting::addDefaultRoutes(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&)’
     addDefaultRoutes(topo, nodeInfo);
                                    ^
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:30:18: note: candidate: virtual void ConfigRouting::addDefaultRoutes(int&, ConfigRouting::NodeInfoVector&)
     virtual void addDefaultRoutes(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:30:18: note:   no known conversion for argument 1 from ‘omnetpp::cTopology’ to ‘int&’
logic/routing/ConfigRouting.cc:232:61: error: no matching function for call to ‘ConfigRouting::fillRoutingTables(omnetpp::cTopology&, ConfigRouting::NodeInfoVector&, const char*&, const char*&)’
     fillRoutingTables(topo, nodeInfo, vm1address, vm2address);
                                                             ^
In file included from logic/routing/ConfigRouting.cc:5:0:
logic/routing/ConfigRouting.h:34:18: note: candidate: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:34:18: note:   candidate expects 2 arguments, 4 provided
logic/routing/ConfigRouting.h:38:18: note: candidate: virtual void ConfigRouting::fillRoutingTables(int&, ConfigRouting::NodeInfoVector&, const char*, const char*)
     virtual void fillRoutingTables(cTopology& topo, NodeInfoVector& nodeInfo, const char * vm1address, const char * vm2address);
                  ^~~~~~~~~~~~~~~~~
logic/routing/ConfigRouting.h:38:18: note:   no known conversion for argument 1 from ‘omnetpp::cTopology’ to ‘int&’
make[1]: *** [../out/gcc-debug/src/logic/routing/ConfigRouting.o] Error 1
make: *** [all] Error 2
Makefile:156: recipe for target '../out/gcc-debug/src/logic/routing/ConfigRouting.o' failed
make[1]: Leaving directory '/home/ssamal/Downloads/omnetpp-5.0/samples/FatTree-New/src'
Makefile:2: recipe for target 'all' failed

11:41:09 Build Finished (took 1s.791ms)

