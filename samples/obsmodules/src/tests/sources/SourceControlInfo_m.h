//
// Generated file, do not edit! Created by nedtool 5.0 from src/tests/sources/SourceControlInfo.msg.
//

#ifndef __SOURCECONTROLINFO_M_H
#define __SOURCECONTROLINFO_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/tests/sources/SourceControlInfo.msg:24</tt> by nedtool.
 * <pre>
 * //Control info to attach to the scheduled objects with the index of OMNeT++ gate where the object will be sent by.
 * //Used in testSource2, testSource3, testSource4.
 * class SourceControlInfo
 * {
 *     int sendingIndex = -1;
 *     int label = -1; //Only for testSource2
 * }
 * </pre>
 */
class SourceControlInfo : public ::omnetpp::cObject
{
  protected:
    int sendingIndex;
    int label;

  private:
    void copy(const SourceControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SourceControlInfo&);

  public:
    SourceControlInfo();
    SourceControlInfo(const SourceControlInfo& other);
    virtual ~SourceControlInfo();
    SourceControlInfo& operator=(const SourceControlInfo& other);
    virtual SourceControlInfo *dup() const {return new SourceControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getSendingIndex() const;
    virtual void setSendingIndex(int sendingIndex);
    virtual int getLabel() const;
    virtual void setLabel(int label);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SourceControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SourceControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SOURCECONTROLINFO_M_H

