<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>index.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>index_8h</filename>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msgcppgenerator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>msgcppgenerator_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <class kind="struct">omnetpp::nedxml::MsgCppGeneratorOptions</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator</class>
    <class kind="struct">omnetpp::nedxml::MsgCppGenerator::TypeDesc</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::ClassInfo::FieldInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::EnumInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::EnumInfo::EnumItem</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>ned1generator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>ned1generator_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <class kind="class">omnetpp::nedxml::NED1Generator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED1</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga3d51ffda31140e8339cfcc67fc45803a</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ned2generator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>ned2generator_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <class kind="class">omnetpp::nedxml::NED2Generator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED2</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga0e3c2ce8d0c00ac1180fac09bb09d4b7</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedcrossvalidator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedcrossvalidator_8h</filename>
    <includes id="nedvalidator_8h" name="nedvalidator.h" local="yes" imported="no">nedvalidator.h</includes>
    <class kind="class">omnetpp::nedxml::NEDCrossValidator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>neddtdvalidator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>neddtdvalidator_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="neddtdvalidatorbase_8h" name="neddtdvalidatorbase.h" local="yes" imported="no">neddtdvalidatorbase.h</includes>
    <class kind="class">omnetpp::nedxml::NEDDTDValidator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>neddtdvalidatorbase.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>neddtdvalidatorbase_8h</filename>
    <includes id="nedvalidator_8h" name="nedvalidator.h" local="yes" imported="no">nedvalidator.h</includes>
    <class kind="class">omnetpp::nedxml::NEDDTDValidatorBase</class>
    <class kind="struct">omnetpp::nedxml::NEDDTDValidatorBase::Choice</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedelement.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedelement_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::NEDElementUserData</class>
    <class kind="struct">omnetpp::nedxml::NEDSourceRegion</class>
    <class kind="class">omnetpp::nedxml::NEDElement</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedelements.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedelements_8h</filename>
    <includes id="nedelement_8h" name="nedelement.h" local="yes" imported="no">nedelement.h</includes>
    <class kind="class">omnetpp::nedxml::FilesElement</class>
    <class kind="class">omnetpp::nedxml::NedFileElement</class>
    <class kind="class">omnetpp::nedxml::CommentElement</class>
    <class kind="class">omnetpp::nedxml::PackageElement</class>
    <class kind="class">omnetpp::nedxml::ImportElement</class>
    <class kind="class">omnetpp::nedxml::PropertyDeclElement</class>
    <class kind="class">omnetpp::nedxml::ExtendsElement</class>
    <class kind="class">omnetpp::nedxml::InterfaceNameElement</class>
    <class kind="class">omnetpp::nedxml::SimpleModuleElement</class>
    <class kind="class">omnetpp::nedxml::ModuleInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::CompoundModuleElement</class>
    <class kind="class">omnetpp::nedxml::ChannelInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::ChannelElement</class>
    <class kind="class">omnetpp::nedxml::ParametersElement</class>
    <class kind="class">omnetpp::nedxml::ParamElement</class>
    <class kind="class">omnetpp::nedxml::PropertyElement</class>
    <class kind="class">omnetpp::nedxml::PropertyKeyElement</class>
    <class kind="class">omnetpp::nedxml::GatesElement</class>
    <class kind="class">omnetpp::nedxml::GateElement</class>
    <class kind="class">omnetpp::nedxml::TypesElement</class>
    <class kind="class">omnetpp::nedxml::SubmodulesElement</class>
    <class kind="class">omnetpp::nedxml::SubmoduleElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionsElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionGroupElement</class>
    <class kind="class">omnetpp::nedxml::LoopElement</class>
    <class kind="class">omnetpp::nedxml::ConditionElement</class>
    <class kind="class">omnetpp::nedxml::ExpressionElement</class>
    <class kind="class">omnetpp::nedxml::OperatorElement</class>
    <class kind="class">omnetpp::nedxml::FunctionElement</class>
    <class kind="class">omnetpp::nedxml::IdentElement</class>
    <class kind="class">omnetpp::nedxml::LiteralElement</class>
    <class kind="class">omnetpp::nedxml::MsgFileElement</class>
    <class kind="class">omnetpp::nedxml::NamespaceElement</class>
    <class kind="class">omnetpp::nedxml::CplusplusElement</class>
    <class kind="class">omnetpp::nedxml::StructDeclElement</class>
    <class kind="class">omnetpp::nedxml::ClassDeclElement</class>
    <class kind="class">omnetpp::nedxml::MessageDeclElement</class>
    <class kind="class">omnetpp::nedxml::PacketDeclElement</class>
    <class kind="class">omnetpp::nedxml::EnumDeclElement</class>
    <class kind="class">omnetpp::nedxml::EnumElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldsElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldElement</class>
    <class kind="class">omnetpp::nedxml::MessageElement</class>
    <class kind="class">omnetpp::nedxml::PacketElement</class>
    <class kind="class">omnetpp::nedxml::ClassElement</class>
    <class kind="class">omnetpp::nedxml::StructElement</class>
    <class kind="class">omnetpp::nedxml::FieldElement</class>
    <class kind="class">omnetpp::nedxml::UnknownElement</class>
    <class kind="class">omnetpp::nedxml::NEDElementFactory</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="enumeration">
      <type></type>
      <name>NEDElementCode</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>gad34cccc2e635c441d3d7721c4c15b68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NULL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cabe4646866ad678f9c06fbf48b783db6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FILES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf0f52ccf1b604c247dfd73bba385986e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NED_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca47a8aaf0e028d7dc9ef6e84686599af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMMENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7828180a7f2a34640cadbe66a5d47627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa1665af429b2e65889485610c0c8f03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IMPORT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac0d4ebcbad2ba024f9aa2a3459f44d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca21d8117c33e31fdfd783e500853a95c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXTENDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caacd830bed1d6264625102f079aeecd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_INTERFACE_NAME</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b478e073c3996bd6ce9abf5dd79362f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SIMPLE_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca24308b4324187beac81e6920d09d31fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MODULE_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca507c7aae391e1d68cb5d0e4796b5ff72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMPOUND_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2f52963e4eb44e8aff5e3dd3707766cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac4af69096a9ba2c0138354b0aaaf8708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa5d202195e740e8da772a6e109f70d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAMETERS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf9976d938ac9fc3a79ada698de026cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cab54508e039787e6f0398f384430dc08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca366803979f7e863f328a2fc32d282e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_KEY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca3cf06ea94e252f4a2bd979abf980c48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca28227565427af0c833a5bee75ef5d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca12bb7f956774de679e41dc75e4d540df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_TYPES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad8caee31b25cf157b5c4172b6bbb2ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca15ca0c9a2e2b66624bb6775019c7324b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca737cb9551d7e0f206a95594b9b4e51ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTIONS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca91040a6621bfc3dd6d6a1d49251b97c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca5a4b3bae4f85c56101b612c59d62a7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION_GROUP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2cb06aa76da0aeabcb0d93f6063e4633</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LOOP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca80bfe03698c5c33da499c0e3b2e7681b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONDITION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa4146926cf4f987508391391ddda2acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXPRESSION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca734f944e9aff83bbc91a0955b1897e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_OPERATOR</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf527a555c91f595c4d8a87031e9a6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FUNCTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca67c8ebfe2cdba16710b755fabd957b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IDENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7af94c708923ef46195eb3f40a09e03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LITERAL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac5e0fa7b1aeec2c9c8e4db12d4a32404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MSG_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf6fc54e776c962a70d5ab05c4bcfd235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NAMESPACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae80473c92c631ca07aaffc356c185ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CPLUSPLUS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca580edeb93570c921dd22b3aefab4cd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad70d3465bf52a059f19f75b77882008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b9f948df5d9953eda28c4b599225041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca02f84cd957697624b7c37400ba00dc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae9151e7150e9363c89623c54781febb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caabeb508e148820edf30d11819ac5df76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2fe992d1dde8aeabc148e00701be03a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8e14996df6f58540dbd1627654aef3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca50b0047b9bb5b428cc5cad20b99bc099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca66d2f84f9f6159edd967a14f7c27b4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca78f7289e11ee7d4ae6a3e8c3bf6fb554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca9e9eee707e30a18866aa3827671383ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca6671693f35af380e17da8157cb10f11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caefe111337aad0cad283a278378f7f34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_UNKNOWN</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2dc1887831f5e3d5c57cd37acdccfda9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55baddc93c6d17fe5056f8a08f1c8b1c8ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_INPUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba3f29225c8c18a7e8f9612e9518e35a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_OUTPUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55bad98092bff8686d2464b6216df202f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_INOUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba78dda7dc6c9cab7eacc0b04de92273bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a6c803a9657f3b88598155388718c45b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_DOUBLE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ad481bd89f4c26ee6215e5259e12c3ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_INT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a602f12db367b0c3879efeb8ede9aae77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_STRING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7abc2a3ef2d905dbb441a4fe52d95feb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_BOOL</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a86271c25a5226dd65799813fb9ee2629</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_XML</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a31b537139690df8fc663343025830602</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_DOUBLE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a4c5c7abb8b0ae2bff596fead502481ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_QUANTITY</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a66de7ddaa292012f2e8dd277e59438a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_INT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5ad20b6bcc27f89550849690a374896c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_STRING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a81770be78156b5091a33b36be0561642</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_BOOL</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a14618ce2c296116b27fe55ce16205471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_SPEC</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a6818fe8b578886df4111aff4b4ffd1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a297f4f23a51b635f4ff5fb4575fd0c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_I</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ac0fe700641987bf288bd1401094942c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_O</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a9b5c0bac32933d8b94d11e10f088ef6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nederror.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nederror_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::NEDErrorStore</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR0</name>
      <anchorfile>nederror_8h.html</anchorfile>
      <anchor>a4c3d11a63e2590ad0e259dc59d5d2425</anchor>
      <arglist>(context, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR1</name>
      <anchorfile>nederror_8h.html</anchorfile>
      <anchor>afaa696dffa0e17a7033a09c5a2651b4e</anchor>
      <arglist>(context, msg, arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR2</name>
      <anchorfile>nederror_8h.html</anchorfile>
      <anchor>ad6eeefd99d1537bbe0d774f23b493736</anchor>
      <arglist>(context, msg, arg1, arg2)  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR3</name>
      <anchorfile>nederror_8h.html</anchorfile>
      <anchor>ada383a951cc9e537c2643a1431f7c2a5</anchor>
      <arglist>(context, msg, arg1, arg2, arg3)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NEDErrorSeverity</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_INFO</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2a3f3429cc5bd2ea8ce12263aef262e4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_WARNING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2a92ad38b5a0446297cb6369ee7bc8aa03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_ERROR</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2ab052432f61d253ff06eae674eda8f765</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NEDInternalError</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a2369c65a4d77ae55f51f543bd362bd58</anchor>
      <arglist>(const char *file, int line, NEDElement *context, const char *messagefmt,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedexception.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedexception_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::NEDException</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedfilebuffer.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedfilebuffer_8h</filename>
    <includes id="nedparser_8h" name="nedparser.h" local="yes" imported="no">nedparser.h</includes>
    <class kind="class">omnetpp::nedxml::NEDFileBuffer</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedparser.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedparser_8h</filename>
    <includes id="nedelement_8h" name="nedelement.h" local="yes" imported="no">nedelement.h</includes>
    <includes id="nedyydefs_8h" name="nedyydefs.h" local="yes" imported="no">nedyydefs.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <class kind="class">omnetpp::nedxml::NEDParser</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_NUMERIC</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>ab028b9896a89a6d6b252cbd5bbec71ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_CONST_NUM</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a910ec460fe8b7b4c4ddfa576d4f6ff5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_STRING</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a4e4e428e3a6a191834e3ff63bd301866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_BOOL</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a375775d23dbf60915db33f1add80c006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_XML</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a74a3c3ebe3681ab4e034a1319cfb3e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_ANYTYPE</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>ae8969deb5b9c71fa28bf843dad18abaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NEDParser *</type>
      <name>np</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a497ba1b155bd1ff3551bccd03fa86cfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedresourcecache.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedresourcecache_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="nedtypeinfo_8h" name="nedtypeinfo.h" local="yes" imported="no">nedtypeinfo.h</includes>
    <class kind="struct">omnetpp::nedxml::NEDLookupContext</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache::INEDTypeNames</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache::CachedTypeNames</class>
    <class kind="struct">omnetpp::nedxml::NEDResourceCache::PendingNedType</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedsaxhandler.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedsaxhandler_8h</filename>
    <includes id="nedelement_8h" name="nedelement.h" local="yes" imported="no">nedelement.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <includes id="saxparser_8h" name="saxparser.h" local="yes" imported="no">saxparser.h</includes>
    <class kind="class">omnetpp::nedxml::NEDSAXHandler</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedsyntaxvalidator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedsyntaxvalidator_8h</filename>
    <includes id="nedvalidator_8h" name="nedvalidator.h" local="yes" imported="no">nedvalidator.h</includes>
    <class kind="class">omnetpp::nedxml::NEDSyntaxValidator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedtools.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedtools_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <class kind="class">omnetpp::nedxml::NEDTools</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedtypeinfo.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedtypeinfo_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <class kind="class">omnetpp::nedxml::NEDTypeInfo</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedutil.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedutil_8h</filename>
    <includes id="nedelement_8h" name="nedelement.h" local="yes" imported="no">nedelement.h</includes>
    <class kind="class">omnetpp::nedxml::DisplayStringUtil</class>
    <class kind="class">omnetpp::nedxml::NEDElementUtil</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::common</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedvalidator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedvalidator_8h</filename>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <includes id="nedexception_8h" name="nedexception.h" local="yes" imported="no">nedexception.h</includes>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <class kind="class">omnetpp::nedxml::NEDValidatorBase</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedxmldefs.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedxmldefs_8h</filename>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NEDXML_API</name>
      <anchorfile>nedxmldefs_8h.html</anchorfile>
      <anchor>a3915af7fb1c0a123f29e86b0339a6782</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedxmlparser.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedxmlparser_8h</filename>
    <includes id="nedelement_8h" name="nedelement.h" local="yes" imported="no">nedelement.h</includes>
    <includes id="nederror_8h" name="nederror.h" local="yes" imported="no">nederror.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API NEDElement *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>gae24f7d5af60258b02d76bfc815d771ea</anchor>
      <arglist>(const char *filename, NEDErrorStore *errors)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedyydefs.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedyydefs_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="struct">my_yyltype</class>
    <class kind="struct">omnetpp::nedxml::LineColumn</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>YYLTYPE</name>
      <anchorfile>nedyydefs_8h.html</anchorfile>
      <anchor>a05958fcca5262ce3895ecf3be642dc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE</name>
      <anchorfile>nedyydefs_8h.html</anchorfile>
      <anchor>a2ceb5b985e149f18e018b142cfdd7264</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>omnetpp::nedxml::NEDElement *</type>
      <name>doParseNED2</name>
      <anchorfile>nedyydefs_8h.html</anchorfile>
      <anchor>a0232374ca40736d1b704409767daff01</anchor>
      <arglist>(omnetpp::nedxml::NEDParser *p, const char *nedtext)</arglist>
    </member>
    <member kind="function">
      <type>omnetpp::nedxml::NEDElement *</type>
      <name>doParseNED1</name>
      <anchorfile>nedyydefs_8h.html</anchorfile>
      <anchor>a2a323b0691c11858dc4306e90aa61863</anchor>
      <arglist>(omnetpp::nedxml::NEDParser *p, const char *nedtext)</arglist>
    </member>
    <member kind="function">
      <type>omnetpp::nedxml::NEDElement *</type>
      <name>doParseMSG2</name>
      <anchorfile>nedyydefs_8h.html</anchorfile>
      <anchor>aeacff10e68716a4ac1208d602328d913</anchor>
      <arglist>(omnetpp::nedxml::NEDParser *p, const char *nedtext)</arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>pos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5db42ac8af5c08f937049e91e174b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>prevpos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad503b230caf787844066a886e5e6ebe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedyylib.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>nedyylib_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <includes id="nedyydefs_8h" name="nedyydefs.h" local="yes" imported="no">nedyydefs.h</includes>
    <includes id="nedparser_8h" name="nedparser.h" local="yes" imported="no">nedparser.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NONREENTRANT_NED_PARSER</name>
      <anchorfile>nedyylib_8h.html</anchorfile>
      <anchor>a46745343f46884fb81533c96ff703628</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>slashifyFilename</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a850d36b8df17da7ecc7954c53cbd6c32</anchor>
      <arglist>(const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>currentLocation</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22bafbd26472b89c71faa85ac9e36db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>createElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3bef42111284a2de378960e6a7801e49</anchor>
      <arglist>(int tagcode, NEDElement *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getOrCreateElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ace8166859d80bba935e00200bcc5eec0</anchor>
      <arglist>(int tagcode, NEDElement *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a329acfedfacff2fd2afd537ba5224116</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a86a7e4cfe83bb989591e7564195b2ce6</anchor>
      <arglist>(NEDElement *node, YYLTYPE firstpos, YYLTYPE lastpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3a08276355512c8fd69cf2c8dbf5ce10</anchor>
      <arglist>(NEDElement *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addComponentProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a83ae6a41f2ba89e947dcfa72719c8a5c</anchor>
      <arglist>(NEDElement *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3186d66f90d4dea30e7fb7992a8622d7</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeComponentSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad7a8b1c9615c454272a230d5fa4b4f54</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>setIsNetworkProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad60796bb2e2e2051ed58e168bbd63bee</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ae08014437fc837fdf47cafd5802d9299</anchor>
      <arglist>(NEDElement *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af41da95c451c1ebb065d47df592d1fe1</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad23fdb59629bc3b5cea32c5ff6a391e5</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aabd63228de51930069419733aff45ad7</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a808f8c17bb7ce31000dc3681f02d8df4</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a1c676740a6e3db18822ec8b448b49f49</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a45b61d4275298831100c3af15990cf00</anchor>
      <arglist>(NEDElement *node, YYLTYPE firstpos, YYLTYPE lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa56d39418478a386862fba0997343b31</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a8ae273c336597a3a4b4e74d3c9fdc24f</anchor>
      <arglist>(NEDElement *params, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a473cbb45abad4850b8575fe7d1fa8ca4</anchor>
      <arglist>(NEDElement *params, const char *name, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>addGate</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa1d8979cc4add39e567dd5a4daee65e0</anchor>
      <arglist>(NEDElement *gates, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>trimQuotes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a82e51dae0f24d26f6a1f3862d4685be5</anchor>
      <arglist>(YYLTYPE vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>trimDoubleBraces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a24193a4479038050360345a5a05d037e</anchor>
      <arglist>(YYLTYPE vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapAttributes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ac2a43316a2ae8e0b402d90ce5fa5c36b</anchor>
      <arglist>(NEDElement *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapExpressionChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad8f679c224e34d71c3e141661df413cc</anchor>
      <arglist>(NEDElement *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapConnection</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aebfce480d0a88334ab8fb7176833ee71</anchor>
      <arglist>(NEDElement *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transferChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af32f72e4c3adecd830288a843b1de924</anchor>
      <arglist>(NEDElement *from, NEDElement *to)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abe65d18d0fcfc1e982b60d5b64d47193</anchor>
      <arglist>(YYLTYPE)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22be248d77562934acd27795fe9dd2e9</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>removeSpaces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39fdcb02d7971f227e00743ffb2ce4d8</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>ExpressionElement *</type>
      <name>createExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a4ad0a4866d657cebbcbb5b2cdc1b3b70</anchor>
      <arglist>(NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>OperatorElement *</type>
      <name>createOperator</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ab0eab99c85fc3b9540c1b7084e7c8545</anchor>
      <arglist>(const char *op, NEDElement *operand1, NEDElement *operand2=nullptr, NEDElement *operand3=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>FunctionElement *</type>
      <name>createFunction</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a8f1829d949fd666b302972b875f6c0bd</anchor>
      <arglist>(const char *funcname, NEDElement *arg1=nullptr, NEDElement *arg2=nullptr, NEDElement *arg3=nullptr, NEDElement *arg4=nullptr, NEDElement *arg5=nullptr, NEDElement *arg6=nullptr, NEDElement *arg7=nullptr, NEDElement *arg8=nullptr, NEDElement *arg9=nullptr, NEDElement *arg10=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a473bf81dbf81385e036990bf7ac7a44d</anchor>
      <arglist>(YYLTYPE parampos)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ae75531ff4b6421bee1829d23f227e615</anchor>
      <arglist>(YYLTYPE parampos, YYLTYPE modulepos, NEDElement *moduleindexoperand=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a1b3fea658917de0aec89740a646f12d5</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a242197f192f8eaed3e3b29f25cf33297</anchor>
      <arglist>(int type, YYLTYPE valuepos, YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>afbb03a633debfe8e614d92867d3772e8</anchor>
      <arglist>(int type, const char *value, const char *text)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createStringLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa08d2b41b845a90f57c6e8edca7e4772</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createQuantityLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a6927e551e3023a7e1d4314efccb6b0e7</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>unaryMinus</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad45b7972f04e9223cbab0cb8c351bfd5</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOptionalExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a428d3c4e4bde8b7e3494677a23392bcd</anchor>
      <arglist>(NEDElement *elem, const char *attrname, YYLTYPE exprpos, NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39f375e05157f88be906e23d673b37a0</anchor>
      <arglist>(NEDElement *elem, const char *attrname, YYLTYPE exprpos, NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertBackgroundDisplayString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22e486bff07b8358b984d6ea66676012</anchor>
      <arglist>(const char *old)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad2c745ca8599b0dc2181d04d0ebd7885</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>makeYYLTYPE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3553d2a8bdf75bdc53db0dee9a0d09f2</anchor>
      <arglist>(int fl, int fc, int ll, int lc)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>makeEmptyYYLTYPE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a6bb28c0404c9cf12394f01a2b58f96ad</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>saxparser.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>saxparser_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>xmlgenerator.h</name>
    <path>/home/default/omnetpp/src/nedxml/</path>
    <filename>xmlgenerator_8h</filename>
    <includes id="nedelements_8h" name="nedelements.h" local="yes" imported="no">nedelements.h</includes>
    <class kind="class">omnetpp::nedxml::NEDXMLGenerator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaf249324dc4a8031a96082e8877383767</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaa8bd302f2653ee5362ca848b5865da6d</anchor>
      <arglist>(NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDResourceCache::CachedTypeNames</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</filename>
    <base>omnetpp::nedxml::NEDResourceCache::INEDTypeNames</base>
    <member kind="function">
      <type></type>
      <name>CachedTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>ac26349df926cf031f9c6c881b32aa1cb</anchor>
      <arglist>(NEDResourceCache *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a79f3a4135d37aaee6d2cbeb77e487831</anchor>
      <arglist>(const char *qname) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>size</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a95e77d67c3fe663a4f10c3ddf6ed3f62</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a4b1d69af00ad7b7a487fb1d5a93c243e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDResourceCache *</type>
      <name>p</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a5faffc8055c44b7ba1d1ad87676f258d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ChannelElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ChannelElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a5b78c663fcea59dee809a96ab7389ad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a58d09e17f45d61589d6ed28d74ee7381</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>aa6f88d7837fb6ab9244b180f9cac88a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a7225932a8e342e8bcf647de8ea5c031c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getNextChannelSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>aea9229b4ed5d4c58f84a2eef92c7adf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a5b78c663fcea59dee809a96ab7389ad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a58d09e17f45d61589d6ed28d74ee7381</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>aa6f88d7837fb6ab9244b180f9cac88a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a7225932a8e342e8bcf647de8ea5c031c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getNextChannelSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>aea9229b4ed5d4c58f84a2eef92c7adf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ChannelInterfaceElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>afb4153d12530a54436efce6bbb59fea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a85e1fdfa61e10ea559551a1b805fd513</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad984066668db99256a0dea18f0e48fa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1dff1a29f931faadc48faa49645c27ad</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getNextChannelInterfaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a8599e58b47d00251ba67acf58d93b89e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>afb4153d12530a54436efce6bbb59fea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a85e1fdfa61e10ea559551a1b805fd513</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad984066668db99256a0dea18f0e48fa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1dff1a29f931faadc48faa49645c27ad</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getNextChannelInterfaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a8599e58b47d00251ba67acf58d93b89e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ChannelInterfaceElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NEDDTDValidatorBase::Choice</name>
    <filename>structomnetpp_1_1nedxml_1_1NEDDTDValidatorBase_1_1Choice.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>tags</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDDTDValidatorBase_1_1Choice.html</anchorfile>
      <anchor>ac4e09a5ba4050133abca219b6f3b7d76</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mult</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDDTDValidatorBase_1_1Choice.html</anchorfile>
      <anchor>a97a0e6c37d0527cd4ead4d207348e47c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ClassDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a349b4726acb4e2ebaa4a36d1dff1d164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a6c451f7d566ba92c02cd78a7e0b95b1e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1f9d5edef9e365d7bd2b67994f447a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a67bc57bbc724c1881b4bdccd6f28d16f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsCobject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a62a10ff2df1f7494361b4eed858000d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsCobject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a859342613b82c31a523a1a3c47785d5b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>getNextClassDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a60d8fd96d83924708ea670f1bacc4026</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a349b4726acb4e2ebaa4a36d1dff1d164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a6c451f7d566ba92c02cd78a7e0b95b1e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1f9d5edef9e365d7bd2b67994f447a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a67bc57bbc724c1881b4bdccd6f28d16f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsCobject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a62a10ff2df1f7494361b4eed858000d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsCobject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a859342613b82c31a523a1a3c47785d5b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>getNextClassDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a60d8fd96d83924708ea670f1bacc4026</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ClassElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ClassElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a0c49ef44736301930a19f2006dd20acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a72eec55f7da715b3724c7b4fa43bcec5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a07091c70e026eff285e2f667b85dbe43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a40dd1c89782db0fd3c1639997ca571c6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>getNextClassSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2357ea171d81d112b285853eff8d14d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a0c49ef44736301930a19f2006dd20acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a72eec55f7da715b3724c7b4fa43bcec5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a07091c70e026eff285e2f667b85dbe43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a40dd1c89782db0fd3c1639997ca571c6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>getNextClassSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a2357ea171d81d112b285853eff8d14d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ClassElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCppGenerator::ClassInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::ClassInfo::FieldInfo</class>
    <member kind="typedef">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>Fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a44b0d037e0faae6ef8165ef2c76c219e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a73309f69b50eaca593b93c9203a21448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>NEDElement *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a2ff3c25ad00d334d43d701e86670aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>keyword</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>ae2dcf667178b1c1506060e76fa8b88b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a0cfb9a9167aceb4035a5f731a1b4cabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a9aef67e390d0ac9bd1de9b6f38ac8f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>props</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a211d1549edeaf1dda987e4b1d32698a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>gap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>abe4b893522c2d79335ba3bb1e1de65f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>omitgetverb</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a9c926d7f6c9a3ead632777e0fd669413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>classtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a1741ebe5774f50ae9bd57f0f68b7e5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a6460004b60a6f6d3457132fd63a45163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>realmsgclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a9b5e72257aa82c66c17dc8330f36f8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbaseclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>aa9af4f17f40f3abb5d4702cd7c18fdc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgdescclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>acbdf4ada5df5ee0a9fae1c794c250d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldnamesuffix</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a264d172cb02935757d16fe1566151e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>ae8763e6e06dc82740e841c9d199fee75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>baseclassFieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>afa63d45cb88ac07c1512764bce35ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_class</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a15fe7744149f8f99919dbc990e27881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_descriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a32c3e196a4fe1b72c54e817a451f24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_setters_in_descriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a2da770bd096d34e188f9f38a51afc2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>ac2994442f90ec0a895764ae27f0d625e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbaseqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a07764c85f7942f44b94f2dc782864312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringVector</type>
      <name>implements</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo.html</anchorfile>
      <anchor>a9a9347bafa9ba71ae607cbbc03812582</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::CommentElement</name>
    <filename>classomnetpp_1_1nedxml_1_1CommentElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ac3d329161bea9952e8907ae005fe4361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ac40e2de9e7bef304c5a558505526f0cc</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>aa695d9e43d69d07eef61901e5713ccca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a149b89c36f2da89d3e48d5e64c1b76c7</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLocid</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>aee8c10141c5d8a5ffffba374229b6066</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocid</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a90627f9ab02b91c94b906b6477e3a4f5</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ab8492dc4c0e12b3fb2c98d6ef9c44adb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a3b97c938e652874dfcd8d8b013de558e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getNextCommentSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a6c651a91de74e95d8502cd36a0a5ea0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ac3d329161bea9952e8907ae005fe4361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ac40e2de9e7bef304c5a558505526f0cc</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>aa695d9e43d69d07eef61901e5713ccca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a149b89c36f2da89d3e48d5e64c1b76c7</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLocid</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>aee8c10141c5d8a5ffffba374229b6066</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocid</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a90627f9ab02b91c94b906b6477e3a4f5</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>ab8492dc4c0e12b3fb2c98d6ef9c44adb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a3b97c938e652874dfcd8d8b013de558e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getNextCommentSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CommentElement.html</anchorfile>
      <anchor>a6c651a91de74e95d8502cd36a0a5ea0c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::CompoundModuleElement</name>
    <filename>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ab5648bed34a562612798b8bbf567d833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3619d7b5dead66749a9183e67983eea8</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a21f115730dec08d727998eb476229d02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3b3ed0710bfec5eae30a0901cfd2f05d</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getNextCompoundModuleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3eec3e3c360ac50f4b969838432fa4d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>getFirstTypesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a57673a02823fdbaa7429d9910bd0925e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>getFirstSubmodulesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2c488206cba3756bf423c1604adc65aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>getFirstConnectionsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a7e0dc7d24800f9e37eda57a053e60707</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ab5648bed34a562612798b8bbf567d833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3619d7b5dead66749a9183e67983eea8</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompoundModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a21f115730dec08d727998eb476229d02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3b3ed0710bfec5eae30a0901cfd2f05d</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getNextCompoundModuleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a3eec3e3c360ac50f4b969838432fa4d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>getFirstTypesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a57673a02823fdbaa7429d9910bd0925e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>getFirstSubmodulesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a2c488206cba3756bf423c1604adc65aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>getFirstConnectionsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CompoundModuleElement.html</anchorfile>
      <anchor>a7e0dc7d24800f9e37eda57a053e60707</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ConditionElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ConditionElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a9a4e6c02967f0bc5176bb369eb4394c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a102ea46633eb52131c790205b627a2e4</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>af588a5e286615c53bbe9d9de79d3e275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2de825149e6acbfae2ea7ebe1efb43d5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a12403c6e1077050df1db4e8297a8231e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a6a89de77dde87847cf89b7d5dad44e3d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getNextConditionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a980b220b9cfdfae0bddf82ec7962da28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a9a4e6c02967f0bc5176bb369eb4394c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a102ea46633eb52131c790205b627a2e4</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConditionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>af588a5e286615c53bbe9d9de79d3e275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a2de825149e6acbfae2ea7ebe1efb43d5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a12403c6e1077050df1db4e8297a8231e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a6a89de77dde87847cf89b7d5dad44e3d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getNextConditionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a980b220b9cfdfae0bddf82ec7962da28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConditionElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ConnectionElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ConnectionElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a042962d2fbfbf6b24755f2ccfa69c594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a01d76b2a9473f15b38a13eee2616de30</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>abe08911f6db90a135443440d46e87797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae28880db83d416c94850b573e1a92dd1</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af931395753925e514fc27f8e47c61080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab5e423c3cdedec64f49f95c8cc1fe1a2</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a28c664722f3fecc2ddede0c7d2ceb5b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>aa1d38774a0ab66ee48c2fd5c2b56da5c</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae4edfcda27ec8474fbbf6e1c3fd26c32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a07e83508056986f21d7b4027d49f51d5</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSrcGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a131c7115922f957b2ab4db342158c077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae89747cbfec936eb4accef52ad1bb115</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6aeb14eafb21b880549f378ea0386149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af600c8b8c141fec9e1a328eeba735123</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSrcGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a3a8c90f3fadf7795acd8dc1d98838951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a186031a4d211c175f1b8d2eeddedaf5f</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>aeb4ea06b33010fee826f3ac24230d817</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>afebf6be95b0cebf62565d5c2abd551fa</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4e66a320ccdccecde383bd4a193523e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae825e1344c75ee9ad37a5a06d030f496</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a8245aae4f54740fe7c36cb0e16ee2d08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab5f5eae618aee5cfe29d5cfaff381ab9</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDestGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad3fcf3c5692b6213044815faa7639d98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad0ec94fe9317f776394c7b2b0c26eb80</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a7e7b02eda1b8d24871311d97ffc7e274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a37847ef5fafc90cbdc136faa3a2a4f3f</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDestGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6ebf6d56b6394ca064e05f2321f832d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2292ce396cc3cd0052c6dceddf518374</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a17c4bf799368b86f2301e63ae2ce2a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4920fe71328bd80d3dd1b0fbf6532b9d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>abdeec1770f9397182495c24c78b4ef8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a5aa1aca4c260b23976bc6f7ab37e053a</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>acfbc303f3e2c5bfd5d3bd8ad36353023</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6bf0bb22874d423b9603591842b071c4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsBidirectional</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a0e6d52ff3c0db34a408bf5b875d78acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsBidirectional</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4c99f2eab878f946f8f7a57731051fa5</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsForwardArrow</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab8d75e57ea07fb06b6a3431ecbd43689</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsForwardArrow</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a41a6b54f0839df82aeabdb6fa5738e57</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getNextConnectionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ac4fb3487231897d128f9844b5ba126ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getFirstLoopChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>adc604008ad2d4b529737317b52f8f251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a042962d2fbfbf6b24755f2ccfa69c594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a01d76b2a9473f15b38a13eee2616de30</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>abe08911f6db90a135443440d46e87797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae28880db83d416c94850b573e1a92dd1</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af931395753925e514fc27f8e47c61080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab5e423c3cdedec64f49f95c8cc1fe1a2</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a28c664722f3fecc2ddede0c7d2ceb5b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>aa1d38774a0ab66ee48c2fd5c2b56da5c</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae4edfcda27ec8474fbbf6e1c3fd26c32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a07e83508056986f21d7b4027d49f51d5</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSrcGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a131c7115922f957b2ab4db342158c077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae89747cbfec936eb4accef52ad1bb115</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSrcGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6aeb14eafb21b880549f378ea0386149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af600c8b8c141fec9e1a328eeba735123</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSrcGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a3a8c90f3fadf7795acd8dc1d98838951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSrcGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a186031a4d211c175f1b8d2eeddedaf5f</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>aeb4ea06b33010fee826f3ac24230d817</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>afebf6be95b0cebf62565d5c2abd551fa</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4e66a320ccdccecde383bd4a193523e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestModuleIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ae825e1344c75ee9ad37a5a06d030f496</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a8245aae4f54740fe7c36cb0e16ee2d08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab5f5eae618aee5cfe29d5cfaff381ab9</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDestGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad3fcf3c5692b6213044815faa7639d98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGatePlusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ad0ec94fe9317f776394c7b2b0c26eb80</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDestGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a7e7b02eda1b8d24871311d97ffc7e274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGateIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a37847ef5fafc90cbdc136faa3a2a4f3f</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDestGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6ebf6d56b6394ca064e05f2321f832d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestGateSubg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2292ce396cc3cd0052c6dceddf518374</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a17c4bf799368b86f2301e63ae2ce2a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4920fe71328bd80d3dd1b0fbf6532b9d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>abdeec1770f9397182495c24c78b4ef8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a5aa1aca4c260b23976bc6f7ab37e053a</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>acfbc303f3e2c5bfd5d3bd8ad36353023</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a6bf0bb22874d423b9603591842b071c4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsBidirectional</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a0e6d52ff3c0db34a408bf5b875d78acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsBidirectional</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a4c99f2eab878f946f8f7a57731051fa5</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsForwardArrow</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ab8d75e57ea07fb06b6a3431ecbd43689</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsForwardArrow</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a41a6b54f0839df82aeabdb6fa5738e57</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getNextConnectionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>ac4fb3487231897d128f9844b5ba126ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getFirstLoopChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>adc604008ad2d4b529737317b52f8f251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ConnectionGroupElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a18fe95dcf41ab4b1d3f6341c8682c7ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a76b4074aa68e7281703428b1ed8a1068</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a4a280e203b53ae5c6d42e2c21fe09b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>acd4c8e353054efca22826b3b54337d72</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>getNextConnectionGroupSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a212a312b2d222459af1fff534bb01bf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getFirstLoopChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>adc604008ad2d4b529737317b52f8f251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getFirstConnectionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a445897dbaf1316d6e993429601983f8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a18fe95dcf41ab4b1d3f6341c8682c7ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a76b4074aa68e7281703428b1ed8a1068</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionGroupElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a4a280e203b53ae5c6d42e2c21fe09b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>acd4c8e353054efca22826b3b54337d72</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>getNextConnectionGroupSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a212a312b2d222459af1fff534bb01bf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getFirstLoopChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>adc604008ad2d4b529737317b52f8f251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getFirstConnectionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionGroupElement.html</anchorfile>
      <anchor>a445897dbaf1316d6e993429601983f8b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ConnectionsElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a7227baef2d2fc4e1358aabb184b406c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>affd3eb8b60ead258237372ee62f3e0d4</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1a1163e51b3895834ef2e6b68d00c5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>aee2d04ed0de65fbd853cfb856adea6ec</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAllowUnconnected</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a995400fc73143ede016c8cb12dd19e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowUnconnected</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a13bc0d9f241cb01106adaf3647abd5dd</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>getNextConnectionsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>aecc0f9583779fbae26f4e2668d34de0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getFirstConnectionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a445897dbaf1316d6e993429601983f8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>getFirstConnectionGroupChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a0ccb29e1fb89b491e2f2105062c5716f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a7227baef2d2fc4e1358aabb184b406c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>affd3eb8b60ead258237372ee62f3e0d4</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1a1163e51b3895834ef2e6b68d00c5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>aee2d04ed0de65fbd853cfb856adea6ec</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAllowUnconnected</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a995400fc73143ede016c8cb12dd19e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowUnconnected</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a13bc0d9f241cb01106adaf3647abd5dd</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionsElement *</type>
      <name>getNextConnectionsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>aecc0f9583779fbae26f4e2668d34de0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionElement *</type>
      <name>getFirstConnectionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a445897dbaf1316d6e993429601983f8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionGroupElement *</type>
      <name>getFirstConnectionGroupChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ConnectionsElement.html</anchorfile>
      <anchor>a0ccb29e1fb89b491e2f2105062c5716f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::CplusplusElement</name>
    <filename>classomnetpp_1_1nedxml_1_1CplusplusElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a92ff67a6c052e5c50a44b0cefffcd5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1959d30738341a8c54adaa2b3aa3f19c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a29fef9ade4db2d702be6278ebeb492c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>abe3ef1e393683e07e9d49d84c0e9aa5f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a9034d0adf6982cb56d8dfdec85c70154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ab0e3698ad60ad7694ab83747d2beeccf</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>getNextCplusplusSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a7751231e4a47442a56e575155afcdea4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a92ff67a6c052e5c50a44b0cefffcd5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1959d30738341a8c54adaa2b3aa3f19c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CplusplusElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a29fef9ade4db2d702be6278ebeb492c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>abe3ef1e393683e07e9d49d84c0e9aa5f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a9034d0adf6982cb56d8dfdec85c70154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>ab0e3698ad60ad7694ab83747d2beeccf</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>getNextCplusplusSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a7751231e4a47442a56e575155afcdea4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1CplusplusElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::DisplayStringUtil</name>
    <filename>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>upgradeBackgroundDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>ad247dfa8bc06545d8fc01d4bb67a2380</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>upgradeSubmoduleDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>ab9437c8da7a73457d705e5a5e5ff09ef</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>upgradeConnectionDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>a15bce481bd9fd907f33ab7493a294b13</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toOldBackgroundDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>a054eb4b8746180ec644d3f3934790345</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toOldSubmoduleDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>a45398c6f23d59f08d27356ba27882b08</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toOldConnectionDisplayString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DisplayStringUtil.html</anchorfile>
      <anchor>a3db92478a0fd4ff9416f96825a360ed7</anchor>
      <arglist>(const char *s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::EnumDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>aaee32c6482d30e983fa4b5ebe8d82d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>af6177eedae792b83884847cc2915d725</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a918f3c8abfb24f9ecefc1b3708af243c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a9abc8172e218393e08af62a5b15feb5e</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>getNextEnumDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a6f763d8874160ed0379f436bd35e4f69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>aaee32c6482d30e983fa4b5ebe8d82d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>af6177eedae792b83884847cc2915d725</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a918f3c8abfb24f9ecefc1b3708af243c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a9abc8172e218393e08af62a5b15feb5e</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>getNextEnumDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a6f763d8874160ed0379f436bd35e4f69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::EnumElement</name>
    <filename>classomnetpp_1_1nedxml_1_1EnumElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ae0f4c6efc68d65592a9e678443a2e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5a423b28c1bb9191ec3af32718c6352b</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5443f92013ea7c4d6c5518f67f307788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>afd197db45801d3e199141b6553690a3b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>getNextEnumSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5ccecead86fa49b276fbc79bd4abd2ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>getFirstEnumFieldsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ae4d3ee14913986f3b53758b4ddbe5c47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ae0f4c6efc68d65592a9e678443a2e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5a423b28c1bb9191ec3af32718c6352b</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5443f92013ea7c4d6c5518f67f307788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>afd197db45801d3e199141b6553690a3b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>getNextEnumSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a5ccecead86fa49b276fbc79bd4abd2ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>getFirstEnumFieldsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumElement.html</anchorfile>
      <anchor>ae4d3ee14913986f3b53758b4ddbe5c47</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::EnumFieldElement</name>
    <filename>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad7dd12226ce1bcbba3c3ad79652cb371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a0b8c4b2d429cedd7cdfafbcc22481b0c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a74d429951fce17c6955f7a36ca47b5f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>aa594bfe56c31f5e6bd477fd4f9bcdde9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>getNextEnumFieldSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a61e132b7bff9e5931583962a1abc10f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad7dd12226ce1bcbba3c3ad79652cb371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a0b8c4b2d429cedd7cdfafbcc22481b0c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumFieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a74d429951fce17c6955f7a36ca47b5f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>aa594bfe56c31f5e6bd477fd4f9bcdde9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>getNextEnumFieldSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a61e132b7bff9e5931583962a1abc10f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::EnumFieldsElement</name>
    <filename>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a3e6a623c687e01e17141b22ae4694b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a661284feccb449f2df3b3dc17056c47a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ae738a9a77a59dcb4ec9e086b2a560060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a8df8701484d0119d1c7f39a0020ae4db</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>getNextEnumFieldsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>aa0fb3d25523d9de314027bf4e5fcf1d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>getFirstEnumFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a280ed16618bfb3776827d29444e0f0f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a3e6a623c687e01e17141b22ae4694b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a661284feccb449f2df3b3dc17056c47a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnumFieldsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ae738a9a77a59dcb4ec9e086b2a560060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a8df8701484d0119d1c7f39a0020ae4db</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldsElement *</type>
      <name>getNextEnumFieldsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>aa0fb3d25523d9de314027bf4e5fcf1d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumFieldElement *</type>
      <name>getFirstEnumFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1EnumFieldsElement.html</anchorfile>
      <anchor>a280ed16618bfb3776827d29444e0f0f6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCppGenerator::EnumInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::EnumInfo::EnumItem</class>
    <member kind="typedef">
      <type>std::vector&lt; EnumItem &gt;</type>
      <name>FieldList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>a15fd354ee765901618a3243b371ce87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>a8584422dc0b7db6dcad8339605886cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EnumElement *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>ad103adc07af4647f82d25856096818f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>a9516335b9a0b54f4c079ce58233f32ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>a39eefe0f60e493336ef8a1d809bead95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FieldList</type>
      <name>fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo.html</anchorfile>
      <anchor>a667266c6e162d0200a9f4648a7bca61f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCppGenerator::EnumInfo::EnumItem</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a5984280932fb9faaf86efe3a7e10eda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>NEDElement *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a2ff3c25ad00d334d43d701e86670aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a5c33da5929c9f2f9ef8d006d2350e6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>ae292722fe020ddc7c05fc5db23145ed0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ExpressionElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ExpressionElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad63dd2aa9f6474e9aa4b698123daedee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a335ec0b5fc7dfbe55206294fb580d847</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a11950d1c4842ec8241b8402ef21be8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ae898aef9c1cf4ae50e36e8bd189ecc84</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTarget</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a837435cc4c67d26e105d2ba16756fb0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>adf5b28ee508018d0db67dad45f0e6731</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getNextExpressionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a53c8738c269c9961ea80dcbdbded3479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad63dd2aa9f6474e9aa4b698123daedee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a335ec0b5fc7dfbe55206294fb580d847</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExpressionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a11950d1c4842ec8241b8402ef21be8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>ae898aef9c1cf4ae50e36e8bd189ecc84</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTarget</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a837435cc4c67d26e105d2ba16756fb0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>adf5b28ee508018d0db67dad45f0e6731</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getNextExpressionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a53c8738c269c9961ea80dcbdbded3479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExpressionElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ExtendsElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ExtendsElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a432925bafc82e6bdda8f477d6416d0e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ac5d9f9ad1e4bf280d32398fdbc62fcb9</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a883deb74ab741b878892ee7bba0f4474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>adf429eec40c4dad9de4ee565f106ed0b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getNextExtendsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a22025181d2293b246bfa520202be4724</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a432925bafc82e6bdda8f477d6416d0e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ac5d9f9ad1e4bf280d32398fdbc62fcb9</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a883deb74ab741b878892ee7bba0f4474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>adf429eec40c4dad9de4ee565f106ed0b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getNextExtendsSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a22025181d2293b246bfa520202be4724</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ExtendsElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::FieldElement</name>
    <filename>classomnetpp_1_1nedxml_1_1FieldElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a3d75245cd499da0bbee6fe9c4f3e5494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a16d480dae3a5527395c84dfdc11a32ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ce3de12319e9c76bbbb8a258da66041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad34608011d4aedffe985d8b11b16fc1d</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDataType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ae4fd594d69899790ef7d2249c4b2bd4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a42774cd40b9a0506ea5d9f235c15862f</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsAbstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a54f92bb8579d3809822a7dc4156c3c43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsAbstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9d068490000fa3f956ce72c3864b878e</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsReadonly</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a851456042216491cc7c0c37432c17b0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsReadonly</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a74eb1f5209042dbad928ddaccd336aee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a7f32ee96e450cfd1152583de0b2413c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ba1c2b96e525db4530e9a441df111a3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9e99ea1717e6825dbe5bf82df6a4cdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a8490eabaa442a01684c0ac3a60d35758</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getNextFieldSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a070215339c80b92d2c45bd1282873ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a3d75245cd499da0bbee6fe9c4f3e5494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a16d480dae3a5527395c84dfdc11a32ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FieldElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ce3de12319e9c76bbbb8a258da66041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad34608011d4aedffe985d8b11b16fc1d</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDataType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ae4fd594d69899790ef7d2249c4b2bd4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a42774cd40b9a0506ea5d9f235c15862f</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsAbstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a54f92bb8579d3809822a7dc4156c3c43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsAbstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9d068490000fa3f956ce72c3864b878e</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsReadonly</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a851456042216491cc7c0c37432c17b0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsReadonly</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a74eb1f5209042dbad928ddaccd336aee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a7f32ee96e450cfd1152583de0b2413c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a2ba1c2b96e525db4530e9a441df111a3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDefaultValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a9e99ea1717e6825dbe5bf82df6a4cdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a8490eabaa442a01684c0ac3a60d35758</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getNextFieldSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a070215339c80b92d2c45bd1282873ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FieldElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCppGenerator::ClassInfo::FieldInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a1d4c2600a99cb491f8f2681a6933708a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>NEDElement *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a2ff3c25ad00d334d43d701e86670aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a743e93a25d8ce8b513e74ca768364f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ftype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7061426e98bc1b0bac5c823ce67df3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ftypeqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aa40e723ef26f2727ca8c16d935c0220a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fval</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8fe6a4fced40d8a1c667c07ff189e463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fisabstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a194034d87f5b1c0ba6708be0d5d88297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fispointer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a04f571b4f31d0f6d2d8a3b20ff3ca255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fisarray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7a94d0daf9b09734b6fe67bc58ce0542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>farraysize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a25f93fa216e9a80df1c17a1b3c9c3652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>fprops</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a09fde7e00013eaf2374fee7ffe79e024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fkind</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ad8480d56dc0db9696d98c4fe188e04f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>classtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a1741ebe5774f50ae9bd57f0f68b7e5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>datatype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a163bb7504578a26dd55c2018a7fc9b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ae2c3d0cef59c7ec873ea5f0178fc6bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rettype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a07adcbaf19ddda37788a910a3b576aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>var</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a4ec082b22f5c94580340122a3e1f3a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7498022263862462a555657bfbd9e8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>varsize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aa551dd5e6ab1af483383b36ccd812fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fsizetype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a159595396e3c8b97e887f1f0acdadb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a83a24e33fd360e57bd74949e0206f491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>setter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a9132556a0634fde04a9af195c9fe03fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>alloc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a047cdb36f1380a89649a359cb8bca0a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getsize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a64f9f0472a14e89783148453c2e9abc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tostring</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a41ba71e690a06411967436dd85e4ccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fromstring</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aeefa7c5e82968491650f19f4709178b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>maybe_c_str</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8517a7f5158a7c2731c5f528a6695fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ae52e92c3d08f83b0bb28a8420e5d7665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aaa5f22f65e794e3cb7075cf1104e8078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fnopack</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a743ec7b92e166d8da103481e76818bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>feditable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8510fa469ce9410c7d43e5773e58a509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>editNotDisabled</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ab89c6a746c3a799055046c76db58f3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fopaque</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>afa8140ff1241363ef4beaba33bea7371</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::FilesElement</name>
    <filename>classomnetpp_1_1nedxml_1_1FilesElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2ec8ae153fcdcee12548f66cdd032269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a793a0436b36f950cdc84d9e8cdbab9ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a1ef75547650a573494928c3f87268cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FilesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ac2f5a3caebbe10f7d75e1760f5b2f2ee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FilesElement *</type>
      <name>getNextFilesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ac3d548af41650b09959b4fe1d8164d50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getFirstNedFileChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>abdb36d48eb76e1f3f497e842e0ea8228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>getFirstMsgFileChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a09edc6672fd7e1d942e911329d2a82ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2ec8ae153fcdcee12548f66cdd032269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a793a0436b36f950cdc84d9e8cdbab9ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FilesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a1ef75547650a573494928c3f87268cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FilesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ac2f5a3caebbe10f7d75e1760f5b2f2ee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FilesElement *</type>
      <name>getNextFilesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>ac3d548af41650b09959b4fe1d8164d50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getFirstNedFileChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>abdb36d48eb76e1f3f497e842e0ea8228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>getFirstMsgFileChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FilesElement.html</anchorfile>
      <anchor>a09edc6672fd7e1d942e911329d2a82ee</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::FunctionElement</name>
    <filename>classomnetpp_1_1nedxml_1_1FunctionElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a9a8e2260c5146af86585a83ab3fb9286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a97f0d23179c8e12ef2a2ca3b31748db5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2858285c6c4e9ca97980977aba8d15b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ae14525f2ff840f6ec63c7b1b4f4bdc1a</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getNextFunctionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>aca2710f26f7d624a2b3d2283c164c445</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a9a8e2260c5146af86585a83ab3fb9286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a97f0d23179c8e12ef2a2ca3b31748db5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FunctionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2858285c6c4e9ca97980977aba8d15b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>ae14525f2ff840f6ec63c7b1b4f4bdc1a</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getNextFunctionSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>aca2710f26f7d624a2b3d2283c164c445</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1FunctionElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::GateElement</name>
    <filename>classomnetpp_1_1nedxml_1_1GateElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a0900c9196d7c4ca7f4b875f5c775ce21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ab83ea7aabd205de486915f7ad2f08337</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>aa9c23ef32162502e06a7d9d3900e78bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a0348257b2600665e6e0bc0cf61879f2b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a7f32ee96e450cfd1152583de0b2413c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2ba1c2b96e525db4530e9a441df111a3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>getNextGateSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a951d9debd0434bc1fca6ee5012a6795c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a0900c9196d7c4ca7f4b875f5c775ce21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ab83ea7aabd205de486915f7ad2f08337</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>aa9c23ef32162502e06a7d9d3900e78bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a0348257b2600665e6e0bc0cf61879f2b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a7f32ee96e450cfd1152583de0b2413c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a2ba1c2b96e525db4530e9a441df111a3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>getNextGateSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a951d9debd0434bc1fca6ee5012a6795c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GateElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::GatesElement</name>
    <filename>classomnetpp_1_1nedxml_1_1GatesElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a96d24332c13c47c2bc6d8906d523c454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2c0b881af67e460b0e7aae7bf5191aad</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a0c0dab006bf399010b519fc6f3cfee02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>aa1387edef9b86c5c9953da031383eac6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getNextGatesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a4ee6e70088d3ee6c8afc6d485c21000a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>getFirstGateChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad09d917a25444472595aa369758f01d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a96d24332c13c47c2bc6d8906d523c454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2c0b881af67e460b0e7aae7bf5191aad</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a0c0dab006bf399010b519fc6f3cfee02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>aa1387edef9b86c5c9953da031383eac6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getNextGatesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a4ee6e70088d3ee6c8afc6d485c21000a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GateElement *</type>
      <name>getFirstGateChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1GatesElement.html</anchorfile>
      <anchor>ad09d917a25444472595aa369758f01d5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::IdentElement</name>
    <filename>classomnetpp_1_1nedxml_1_1IdentElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a59fedcce723cd13a67125c4a4ee6ad33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a211b8c71e15c6acf084c0f2ba149d227</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad2dca742c64ad8e5e01d2dbc47056b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a5e09b6a62edbb56dc6ed7c21c3cd1c62</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a4ca43ad5403eb53ab265a279e96cc133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1e0bc3b52130769be3555aad720df61c</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getNextIdentSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ae23be39fe687382c7e6ef3959dbcf921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a59fedcce723cd13a67125c4a4ee6ad33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a211b8c71e15c6acf084c0f2ba149d227</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IdentElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad2dca742c64ad8e5e01d2dbc47056b01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a5e09b6a62edbb56dc6ed7c21c3cd1c62</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a4ca43ad5403eb53ab265a279e96cc133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1e0bc3b52130769be3555aad720df61c</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getNextIdentSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>ae23be39fe687382c7e6ef3959dbcf921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1IdentElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ImportElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ImportElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>adc7930c7d9e13185ad002c39eca8a22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>acd21633034671c3e3aa63bf8423de56e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a28f87173d965d9f4f679c76b9c159b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a795ea9ba44cc4604b359c59c42bcf5b4</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getImportSpec</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a0773f2ca2489c627a142a99962ddcc22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImportSpec</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ae0d6853c9fb942417011564ed73b31d9</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>getNextImportSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a72693dc77dfce1888fe32a04b77a7ec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>adc7930c7d9e13185ad002c39eca8a22f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>acd21633034671c3e3aa63bf8423de56e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImportElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a28f87173d965d9f4f679c76b9c159b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a795ea9ba44cc4604b359c59c42bcf5b4</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getImportSpec</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a0773f2ca2489c627a142a99962ddcc22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImportSpec</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>ae0d6853c9fb942417011564ed73b31d9</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>getNextImportSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a72693dc77dfce1888fe32a04b77a7ec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ImportElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDResourceCache::INEDTypeNames</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1INEDTypeNames.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1INEDTypeNames.html</anchorfile>
      <anchor>aa8ced3d83c5b782dfffacbae7c9084c4</anchor>
      <arglist>(const char *qname) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>size</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1INEDTypeNames.html</anchorfile>
      <anchor>a189733944a9223f2752d3520746793bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1INEDTypeNames.html</anchorfile>
      <anchor>ae9a5135c63874358dfdd62246752bb9d</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~INEDTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache_1_1INEDTypeNames.html</anchorfile>
      <anchor>ae573d0df7748ab434f6ec465ff24666d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::InterfaceNameElement</name>
    <filename>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>acdc8e534c8347d422d8109af4c580c87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a401cf4f5d1092100a5a5a3e5e1276ac9</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a61d709aba6de14ff502fabee7b48e31e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1de029b1a3ab1a5f30f9b2cde8c3e8bb</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getNextInterfaceNameSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a8b52ad8f5c5930f8bbea3a75cd3a32d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>acdc8e534c8347d422d8109af4c580c87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a401cf4f5d1092100a5a5a3e5e1276ac9</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InterfaceNameElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a61d709aba6de14ff502fabee7b48e31e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1de029b1a3ab1a5f30f9b2cde8c3e8bb</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getNextInterfaceNameSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a8b52ad8f5c5930f8bbea3a75cd3a32d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1InterfaceNameElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::LineColumn</name>
    <filename>structomnetpp_1_1nedxml_1_1LineColumn.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>li</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1LineColumn.html</anchorfile>
      <anchor>a847b6d60ac75de6b0239e2f1ffac4af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>co</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1LineColumn.html</anchorfile>
      <anchor>a6cebf5f34184e082168b8ef6c7151c44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::LiteralElement</name>
    <filename>classomnetpp_1_1nedxml_1_1LiteralElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>aa58cfb4de5d4bd5be3fda3bd725f9c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9f52f7c487f137b90f4080ab1d06e18a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a4c0160b04c62f9103f3a5878e9947497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ada50eff344bfad7abc5a2fb8e848db26</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a6e3da50b07be6be4ddff19d686ed00dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ab16b02e34bcbf04507e140c3f9701308</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getNextLiteralSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>afae656b07e4459a9237e16c64be25301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>aa58cfb4de5d4bd5be3fda3bd725f9c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9f52f7c487f137b90f4080ab1d06e18a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LiteralElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a4c0160b04c62f9103f3a5878e9947497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ada50eff344bfad7abc5a2fb8e848db26</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a6e3da50b07be6be4ddff19d686ed00dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>ab16b02e34bcbf04507e140c3f9701308</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getNextLiteralSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>afae656b07e4459a9237e16c64be25301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LiteralElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::LoopElement</name>
    <filename>classomnetpp_1_1nedxml_1_1LoopElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a67145da4d0b2de2042fb9ae8e68e82e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a74380c46b21bafebe384557319a9d28a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>affbf5fd8f776824711bcbe1704fb8fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2fcabce3e1e4dea88df0020ed8318be6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getParamName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a40006f27a045ed747e024739f026bd24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParamName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ac38f7ec592f8e07e1ff4ce5bc8b63ee4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFromValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a3b53613964661940cf247f00f6d64ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a396472a27f26fb157765470306689212</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getToValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a0de0a8d4283e982e3561fb8be19794a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>af22fd29945671aff328add9c320c66ea</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getNextLoopSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>adaf8906884a6a136ef98e22ae8e508b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a67145da4d0b2de2042fb9ae8e68e82e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a74380c46b21bafebe384557319a9d28a</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LoopElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>affbf5fd8f776824711bcbe1704fb8fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a2fcabce3e1e4dea88df0020ed8318be6</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getParamName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a40006f27a045ed747e024739f026bd24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParamName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>ac38f7ec592f8e07e1ff4ce5bc8b63ee4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFromValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a3b53613964661940cf247f00f6d64ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a396472a27f26fb157765470306689212</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getToValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a0de0a8d4283e982e3561fb8be19794a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>af22fd29945671aff328add9c320c66ea</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LoopElement *</type>
      <name>getNextLoopSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>adaf8906884a6a136ef98e22ae8e508b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1LoopElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MessageDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ace87fa99b9a88ac89b6cdbf6bb28aebd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1062222c3c3ec5ccb5dc071521a6f27c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a43d83d686a117c16667f4403b4a8dec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a8fef308c632a9df0c39cad5e940d14db</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>getNextMessageDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a0f9cac5730a539de14cca117269f3fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ace87fa99b9a88ac89b6cdbf6bb28aebd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1062222c3c3ec5ccb5dc071521a6f27c</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a43d83d686a117c16667f4403b4a8dec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a8fef308c632a9df0c39cad5e940d14db</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>getNextMessageDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a0f9cac5730a539de14cca117269f3fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MessageElement</name>
    <filename>classomnetpp_1_1nedxml_1_1MessageElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>aaf2a05e85b6fcd38e6a22b23090ad78f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a45c96a484ddeeb8ab6ad0c45a6b26c21</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ab1d64ad4de50ac4eefc5a6e7099a6bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a64f8a6d1fdf3dce7fa4809b8a0aaa13c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>getNextMessageSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a01f030b79b444ace77b6c3702f390a43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>aaf2a05e85b6fcd38e6a22b23090ad78f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a45c96a484ddeeb8ab6ad0c45a6b26c21</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ab1d64ad4de50ac4eefc5a6e7099a6bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a64f8a6d1fdf3dce7fa4809b8a0aaa13c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>getNextMessageSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a01f030b79b444ace77b6c3702f390a43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MessageElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ModuleInterfaceElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>af1d3ce9edd57c70ee3a4443459005c4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a66017f3905fccec1a3e9c807637b6994</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1b88ee8530b8fa6f8e280d551d160dec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a5f1fc16f1b19cae26e3f9ffa8a306815</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getNextModuleInterfaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a80c60c3b0382648e3c76a68d014a1415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>af1d3ce9edd57c70ee3a4443459005c4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a66017f3905fccec1a3e9c807637b6994</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModuleInterfaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1b88ee8530b8fa6f8e280d551d160dec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a5f1fc16f1b19cae26e3f9ffa8a306815</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getNextModuleInterfaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a80c60c3b0382648e3c76a68d014a1415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ModuleInterfaceElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCppGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator::EnumInfo</class>
    <class kind="struct">omnetpp::nedxml::MsgCppGenerator::TypeDesc</class>
    <member kind="enumeration">
      <type></type>
      <name>ClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6ce26a62afab55d7606ad4e92428b30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a840fc36796c5af05b4616165e6449dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6d6af6ab7649155239023f7cd0014c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COWNEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415accfa25027eb5ed7c03a1cd7795a0dac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CNAMEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415ac2eeee2442ad9eeb51689572331dd046</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREIGN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a433514d8b3d288c74ba1f05a4831798a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6ce26a62afab55d7606ad4e92428b30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a840fc36796c5af05b4616165e6449dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6d6af6ab7649155239023f7cd0014c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COWNEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415accfa25027eb5ed7c03a1cd7795a0dac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CNAMEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415ac2eeee2442ad9eeb51689572331dd046</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREIGN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a433514d8b3d288c74ba1f05a4831798a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgCppGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a260fc55d5df979104eb1455e01467660</anchor>
      <arglist>(NEDErrorStore *errors, const MsgCppGeneratorOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgCppGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a6a5117ea82c6ca5da37dbe03cbffffe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a85feaaec8a08b8f1402965f2f1016d69</anchor>
      <arglist>(MsgFileElement *fileElement, const char *hFile, const char *ccFile)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, TypeDesc &gt;</type>
      <name>TypeDescMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a0e835860e72d3592ed2facd283bfeffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>WordSet</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a338237b024c49f8c507a681367d2668e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>Properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ac766370bbe71940ffab31f3b2d3c12c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initDescriptors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a63d43797eb0527e99d9ed8f6d564fb43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a352d2ad65e340b315754d52271c540af</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>StringVector</type>
      <name>lookupExistingClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a86f453300405e25bdcc5f8823d47bf3e</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>StringVector</type>
      <name>lookupExistingEnumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a53d747b9e09db5fb22d26d72cd1c1251</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isClassDeclared</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>add6454d410155329635fee746ad359cd</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a98f6f5cd1e21d5d2a75d5b072184bc91</anchor>
      <arglist>(const std::string &amp;classqname, ClassType type, NEDElement *context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClassType</type>
      <name>getClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aada06d9071f9294d884564c43c4aa556</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClassInfo</type>
      <name>extractClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a0b342c924022afd6bbfd4f5b4e30ab04</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>extractClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a71a1d3331f8a9bdd4ec7728a19bb2f4f</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Properties</type>
      <name>extractPropertiesOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a2dc05e86bf7b01ca6386d11f64747eb1</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>prepareFieldForCodeGeneration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a91f35b931463fd026c6264249e463577</anchor>
      <arglist>(ClassInfo &amp;info, ClassInfo::FieldInfo *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>prepareForCodeGeneration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a84ef95ca98e1b42d22258d1bee4d3dc4</anchor>
      <arglist>(ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EnumInfo</type>
      <name>extractEnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aa451316b9c439bfefbeaec230949f6fc</anchor>
      <arglist>(EnumElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a0236e25be456b5a655449865c5cb71fd</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ac29e05b56b392725aeaeb4b0d28d2f55</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateDescriptorClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ad887c797dbd21d32ec9d5b5ea4d592d9</anchor>
      <arglist>(const ClassInfo &amp;a)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a55152723ecafe3d87d6a3ab0de6f77b4</anchor>
      <arglist>(const EnumInfo &amp;enumInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNamespaceBegin</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ad4d6d311661fa531706fd67d16f587e9</anchor>
      <arglist>(NEDElement *element)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNamespaceEnd</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a55ad466bbc83ddf0b571bf97c13b2abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>generatePreComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>af18f42315f5d868a24e2978ebd7a32af</anchor>
      <arglist>(NEDElement *nedElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTemplates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a3faec87108c990084b5fb6b51bdf2fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>getPropertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ac1c1a8a65ed2339504d432a9d2b386fa</anchor>
      <arglist>(const Properties &amp;p, const char *name, bool defval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ac64937f6eb4fff4df6f2e41a68bc4cb5</anchor>
      <arglist>(const Properties &amp;p, const char *name, const std::string &amp;defval=std::string())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a02bc2b75aaadbc797d0b4a7a55cb3d76</anchor>
      <arglist>(MsgFileElement *fileElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>makeFuncall</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aedebbffe622037bd643810c5cd8439b8</anchor>
      <arglist>(const std::string &amp;var, const std::string &amp;funcTemplate, bool withIndex=false, const std::string &amp;value=&quot;&quot;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeDescMap</type>
      <name>PRIMITIVE_TYPES</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a3d34f190c70256ec7e9704faa8a70009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WordSet</type>
      <name>RESERVED_WORDS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aa3474167d2f0a10c1bf32ebdccd761d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>hFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a716e6cec536e455eb1693bef0eb3dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>ccFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aef69590cedecbf8f1b592e8a3591b18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>hOutp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a88c3324702b0af457da5912865bd065f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>ccOutp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a7bcfe773f2c7d790835585e9e45ce9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a9885c2efa6d03712498449b432298b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ClassType &gt;</type>
      <name>classType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ae13a9a6c922ef828ee8949217483be09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>enumType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aaa3cc57669bd08a09e50aa6936dbd93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>namespaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>ab6ad09d56120e3b28868679c6bf23393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>namespaceNameVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a4b8f2d4f2671e52b3048006fcfba706b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgCppGeneratorOptions</type>
      <name>opts</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>a274ccd0079773f6f27ed37b45ef82688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static TypeDesc</type>
      <name>_PRIMITIVE_TYPES</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>aee6055eba70467ff8f5697e5c0a410f0</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>_RESERVED_WORDS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCppGenerator.html</anchorfile>
      <anchor>afe85862eb268596781b5ccb13e45bae3</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::MsgCppGeneratorOptions</name>
    <filename>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>MsgCppGeneratorOptions</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</anchorfile>
      <anchor>adf654fd7f885230157c5919f62294b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>exportDef</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</anchorfile>
      <anchor>abf7a644b1f098e9a84648b14f15c13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateClasses</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</anchorfile>
      <anchor>a15fdae6cef5f1ea694289a2c5da5977c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</anchorfile>
      <anchor>aa7ed40e01112e7cfd8df3f2d951efbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateSettersInDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGeneratorOptions.html</anchorfile>
      <anchor>a1e2aa372a86a1f92466162453c1e2d1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgFileElement</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgFileElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a8ffbe04ca28d5d158cf5db61a5b51320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad5c786029b20acc91e9514925b7d5687</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>adca60292285a69bd3a47dc8962c83da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a6e3dba5af2fed224d8e6ddad441c9837</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a192a8ce86fbfc89350d5d4ff1e74fb3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ac51bd40f4ec4d14cec14237842b97b80</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>afaea14395b08c38952e00ada064a3ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2e9f82f6404b6c93ebdc2854bfb4070e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>getNextMsgFileSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a49866734b0d5b6e4bf1c705586f10c98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>getFirstNamespaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad1b2f3fe7ec6bc75a1021e14c63f4f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getFirstPropertyDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a39d2df67ca4dd90a542ffa79b25291a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>getFirstCplusplusChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a5a42a74cbcb04773d23edbda2a8a3a84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>getFirstStructDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad78ea598df3e64c7ca38436fd3dd95f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>getFirstClassDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>aac6f662c7712e70e15d2f515223b9d89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>getFirstMessageDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ab0edb62b926ec8a48989e2bd5faf3896</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>getFirstPacketDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a0dc12232c8033aa6deda868166e9de0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>getFirstEnumDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a136d561969032881c060950992fc7151</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>getFirstStructChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a24fff1570d02e8ddeb2d5d276db406a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>getFirstClassChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a5c51b7c7c8efbd53bf020af2dc59f224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>getFirstMessageChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a79da326bccb97a4328e263af1a09335f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>getFirstPacketChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a94bdab48aa1f1c032d8a4f2201b719dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>getFirstEnumChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a8e61d38c2b8212a2482853ba15c3cbf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a8ffbe04ca28d5d158cf5db61a5b51320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad5c786029b20acc91e9514925b7d5687</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MsgFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>adca60292285a69bd3a47dc8962c83da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a6e3dba5af2fed224d8e6ddad441c9837</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a192a8ce86fbfc89350d5d4ff1e74fb3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ac51bd40f4ec4d14cec14237842b97b80</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>afaea14395b08c38952e00ada064a3ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a2e9f82f6404b6c93ebdc2854bfb4070e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MsgFileElement *</type>
      <name>getNextMsgFileSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a49866734b0d5b6e4bf1c705586f10c98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>getFirstNamespaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad1b2f3fe7ec6bc75a1021e14c63f4f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getFirstPropertyDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a39d2df67ca4dd90a542ffa79b25291a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CplusplusElement *</type>
      <name>getFirstCplusplusChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a5a42a74cbcb04773d23edbda2a8a3a84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>getFirstStructDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ad78ea598df3e64c7ca38436fd3dd95f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassDeclElement *</type>
      <name>getFirstClassDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>aac6f662c7712e70e15d2f515223b9d89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageDeclElement *</type>
      <name>getFirstMessageDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>ab0edb62b926ec8a48989e2bd5faf3896</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>getFirstPacketDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a0dc12232c8033aa6deda868166e9de0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumDeclElement *</type>
      <name>getFirstEnumDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a136d561969032881c060950992fc7151</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>getFirstStructChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a24fff1570d02e8ddeb2d5d276db406a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClassElement *</type>
      <name>getFirstClassChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a5c51b7c7c8efbd53bf020af2dc59f224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageElement *</type>
      <name>getFirstMessageChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a79da326bccb97a4328e263af1a09335f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>getFirstPacketChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a94bdab48aa1f1c032d8a4f2201b719dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EnumElement *</type>
      <name>getFirstEnumChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgFileElement.html</anchorfile>
      <anchor>a8e61d38c2b8212a2482853ba15c3cbf9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>my_yyltype</name>
    <filename>structmy__yyltype.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>a7c1d654b7b6114d7a0abc8d351dd1bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_line</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>aedb9c0431c2ed49deb7d5205752ee868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_column</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>a4d892cac107b2236383ef9602b96bcdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_line</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>a7375684fb330213a07a5fe8471ecb162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_column</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>ae154590bbba7a0f94bff8607063dc9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>text</name>
      <anchorfile>structmy__yyltype.html</anchorfile>
      <anchor>a5633b1433389cec21ade3811bbe9ca5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NamespaceElement</name>
    <filename>classomnetpp_1_1nedxml_1_1NamespaceElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>aa7a6074aa36a83024b613a821f44834b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>aa987a83840ec4ae7717bf0e333b6dd2b</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>abdb6ed262d9deacdd2c68fe25b984544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a941f1325c858373546188dabdb260a2f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>getNextNamespaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ae93513a9d46dfc022a75e57281b26189</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>aa7a6074aa36a83024b613a821f44834b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>aa987a83840ec4ae7717bf0e333b6dd2b</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NamespaceElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>abdb6ed262d9deacdd2c68fe25b984544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a941f1325c858373546188dabdb260a2f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NamespaceElement *</type>
      <name>getNextNamespaceSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>ae93513a9d46dfc022a75e57281b26189</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NamespaceElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NED1Generator</name>
    <filename>classomnetpp_1_1nedxml_1_1NED1Generator.html</filename>
    <member kind="function">
      <type></type>
      <name>NED1Generator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a3eb55df0a464358d53dea5502f0d9192</anchor>
      <arglist>(NEDErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NED1Generator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a0ea18fe7b481d050b1db3820a3a0271a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5f8ec9305b7fa8b278f778294fc6f040</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae7da2a5955f9e928989c85077145420a</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a394112a3ab41c04d3fa5ee644fb97e5c</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNedItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a8318b5a5b2988584b8c51578f715ad28</anchor>
      <arglist>(NEDElement *node, const char *indent, bool islast, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aff53479ed86a311bac2ce405402e6b56</anchor>
      <arglist>(NEDElement *node, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a2ca1582c4450bc3a1c8ccd9381834d4a</anchor>
      <arglist>(NEDElement *node, int tagcode, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5e01655b11b607ded9d310f40ba7bbdc</anchor>
      <arglist>(NEDElement *node, int tagcodes[], const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae5e5606ac0911dd9797a22afe44e7634</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a48f786f48d2a7c4c05d049a99016c271</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a115e7b454a16b200c0eb360933c0c081</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a0b2684db76c631657afe682a2bf29521</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getDisplayStringOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>add52b5fb07454c66ee4218a148b51fe7</anchor>
      <arglist>(NEDElement *node, PropertyElement *&amp;outDisplayProp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getPromptTextOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6546da3658b39ceb2290c93e1f13dd90</anchor>
      <arglist>(ParamElement *param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4a21d7a824aee309b1195a80ac850702</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a123dd48616bdb86f569137a58e721ba9</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aa537e0360a76685c47fc02af9fd52741</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6dc832db0be187e7f5bd9cb6af935f92</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a12e43540a120951aebed439dac202426</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedfiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a39f469d877eaab41506ce03d25c4412b</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedfile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab8735f2d7d0c19e31468503531249874</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a9a1412113b52b9fa9ad824a8610a4102</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aec0e45bd29d2b448fecc9539cbfb179c</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubstParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4f5443b391ca7e9156a6beb38ddeb018</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a3806732d3eeb6814cad1b60eb1fad724</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a601b8a14c069f6f9fc4e8121d8dff4c0</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubstParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a655cc8842ad583c930fdca87bb96e4ed</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5d7eb08dcd7524ff5d446a6bb380fc6c</anchor>
      <arglist>(ParamElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aecc2856a5fb0c79beb12da19a3629ba5</anchor>
      <arglist>(GatesElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmoduleGatesizes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6c02f1efd047d487193e1d126db4b929</anchor>
      <arglist>(GatesElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a13f0265ec8967c25c390712c98dbe898</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGatesize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a15fa16022e64a393c8c7cf97d8e00b5f</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1c96ef39e7057ad6fdcb8ccaa89bfeb5</anchor>
      <arglist>(NEDElement *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a80f6d0cde57478cae3ba9ced197d9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a9885c2efa6d03712498449b432298b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae5e5606ac0911dd9797a22afe44e7634</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a48f786f48d2a7c4c05d049a99016c271</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a115e7b454a16b200c0eb360933c0c081</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a0b2684db76c631657afe682a2bf29521</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getDisplayStringOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>add52b5fb07454c66ee4218a148b51fe7</anchor>
      <arglist>(NEDElement *node, PropertyElement *&amp;outDisplayProp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getPromptTextOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6546da3658b39ceb2290c93e1f13dd90</anchor>
      <arglist>(ParamElement *param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4a21d7a824aee309b1195a80ac850702</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a123dd48616bdb86f569137a58e721ba9</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aa537e0360a76685c47fc02af9fd52741</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6dc832db0be187e7f5bd9cb6af935f92</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a12e43540a120951aebed439dac202426</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedfiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a39f469d877eaab41506ce03d25c4412b</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedfile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab8735f2d7d0c19e31468503531249874</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a9a1412113b52b9fa9ad824a8610a4102</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aec0e45bd29d2b448fecc9539cbfb179c</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubstParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4f5443b391ca7e9156a6beb38ddeb018</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a3806732d3eeb6814cad1b60eb1fad724</anchor>
      <arglist>(ParametersElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a601b8a14c069f6f9fc4e8121d8dff4c0</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubstParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a655cc8842ad583c930fdca87bb96e4ed</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5d7eb08dcd7524ff5d446a6bb380fc6c</anchor>
      <arglist>(ParamElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aecc2856a5fb0c79beb12da19a3629ba5</anchor>
      <arglist>(GatesElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmoduleGatesizes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a6c02f1efd047d487193e1d126db4b929</anchor>
      <arglist>(GatesElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a13f0265ec8967c25c390712c98dbe898</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGatesize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a15fa16022e64a393c8c7cf97d8e00b5f</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1c96ef39e7057ad6fdcb8ccaa89bfeb5</anchor>
      <arglist>(NEDElement *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED1Generator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NED2Generator</name>
    <filename>classomnetpp_1_1nedxml_1_1NED2Generator.html</filename>
    <member kind="function">
      <type></type>
      <name>NED2Generator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa9ddedb4f287796242a3d7643ec4a160</anchor>
      <arglist>(NEDErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NED2Generator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>adaeffd8875f305fdce1592651669e725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a5f8ec9305b7fa8b278f778294fc6f040</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae7da2a5955f9e928989c85077145420a</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a394112a3ab41c04d3fa5ee644fb97e5c</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNedItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a8318b5a5b2988584b8c51578f715ad28</anchor>
      <arglist>(NEDElement *node, const char *indent, bool islast, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aff53479ed86a311bac2ce405402e6b56</anchor>
      <arglist>(NEDElement *node, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a2ca1582c4450bc3a1c8ccd9381834d4a</anchor>
      <arglist>(NEDElement *node, int tagcode, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a5e01655b11b607ded9d310f40ba7bbdc</anchor>
      <arglist>(NEDElement *node, int tagcodes[], const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae5e5606ac0911dd9797a22afe44e7634</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a48f786f48d2a7c4c05d049a99016c271</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a115e7b454a16b200c0eb360933c0c081</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0b2684db76c631657afe682a2bf29521</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgClassOrStructBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a264a8f156c46e32944040a82d1ad39bd</anchor>
      <arglist>(NEDElement *msgclassorstruct, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a4a21d7a824aee309b1195a80ac850702</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a123dd48616bdb86f569137a58e721ba9</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa537e0360a76685c47fc02af9fd52741</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a6dc832db0be187e7f5bd9cb6af935f92</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a12e43540a120951aebed439dac202426</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab2a69c701b51f7b4c416a38e633bc07f</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ac1c1a504ddccab604e696ea4c3f7cffa</anchor>
      <arglist>(PackageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1c96ef39e7057ad6fdcb8ccaa89bfeb5</anchor>
      <arglist>(NEDElement *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a8690e3eb6df7804503496f2c6da43a64</anchor>
      <arglist>(MsgFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa178ef4ab6807b2e959a19d2834d5711</anchor>
      <arglist>(NamespaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCplusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acf93aac179ca7146af81f0195fd93dcc</anchor>
      <arglist>(CplusplusElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStructDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae2c5daa4e7f1a63600f435841a718e40</anchor>
      <arglist>(StructDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9cae2313fc7a34b89559271c148c5c3a</anchor>
      <arglist>(ClassDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessageDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a351e751b01f1b7899b77265d0c45c234</anchor>
      <arglist>(MessageDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacketDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9afadbc8a9ebf60adaf780a015f4a7d6</anchor>
      <arglist>(PacketDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a142fc11efc470e20a93f33e69632e8cc</anchor>
      <arglist>(EnumDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a72189cbf3f7f8f600a8a32ca3474b4d5</anchor>
      <arglist>(EnumElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumFields</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ad1ce4a7a6a3f978b132d789f9aca827f</anchor>
      <arglist>(EnumFieldsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a37b13576ce742a0b1ad010db507c9872</anchor>
      <arglist>(EnumFieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa25eb4f192e21ff42bb5d0b5a2d6b598</anchor>
      <arglist>(MessageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacket</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a071c2972bcad9b0400590900d42c3d00</anchor>
      <arglist>(PacketElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a033f6b8804b5ed8f367bde1f9cada0e5</anchor>
      <arglist>(ClassElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0f1daec7f22349673cc3b6f0caeb6a1a</anchor>
      <arglist>(StructElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a915e5407463ce41a96c6843bcad6d46b</anchor>
      <arglist>(FieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a80f6d0cde57478cae3ba9ced197d9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9885c2efa6d03712498449b432298b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae5e5606ac0911dd9797a22afe44e7634</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a48f786f48d2a7c4c05d049a99016c271</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a115e7b454a16b200c0eb360933c0c081</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0b2684db76c631657afe682a2bf29521</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgClassOrStructBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a264a8f156c46e32944040a82d1ad39bd</anchor>
      <arglist>(NEDElement *msgclassorstruct, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a4a21d7a824aee309b1195a80ac850702</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a123dd48616bdb86f569137a58e721ba9</anchor>
      <arglist>(NEDElement *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa537e0360a76685c47fc02af9fd52741</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a6dc832db0be187e7f5bd9cb6af935f92</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a12e43540a120951aebed439dac202426</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab2a69c701b51f7b4c416a38e633bc07f</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ac1c1a504ddccab604e696ea4c3f7cffa</anchor>
      <arglist>(PackageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1c96ef39e7057ad6fdcb8ccaa89bfeb5</anchor>
      <arglist>(NEDElement *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a8690e3eb6df7804503496f2c6da43a64</anchor>
      <arglist>(MsgFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa178ef4ab6807b2e959a19d2834d5711</anchor>
      <arglist>(NamespaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCplusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>acf93aac179ca7146af81f0195fd93dcc</anchor>
      <arglist>(CplusplusElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStructDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ae2c5daa4e7f1a63600f435841a718e40</anchor>
      <arglist>(StructDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9cae2313fc7a34b89559271c148c5c3a</anchor>
      <arglist>(ClassDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessageDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a351e751b01f1b7899b77265d0c45c234</anchor>
      <arglist>(MessageDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacketDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a9afadbc8a9ebf60adaf780a015f4a7d6</anchor>
      <arglist>(PacketDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a142fc11efc470e20a93f33e69632e8cc</anchor>
      <arglist>(EnumDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a72189cbf3f7f8f600a8a32ca3474b4d5</anchor>
      <arglist>(EnumElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumFields</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>ad1ce4a7a6a3f978b132d789f9aca827f</anchor>
      <arglist>(EnumFieldsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a37b13576ce742a0b1ad010db507c9872</anchor>
      <arglist>(EnumFieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>aa25eb4f192e21ff42bb5d0b5a2d6b598</anchor>
      <arglist>(MessageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacket</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a071c2972bcad9b0400590900d42c3d00</anchor>
      <arglist>(PacketElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a033f6b8804b5ed8f367bde1f9cada0e5</anchor>
      <arglist>(ClassElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a0f1daec7f22349673cc3b6f0caeb6a1a</anchor>
      <arglist>(StructElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>a915e5407463ce41a96c6843bcad6d46b</anchor>
      <arglist>(FieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NED2Generator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDCrossValidator</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</filename>
    <base>omnetpp::nedxml::NEDValidatorBase</base>
    <member kind="function">
      <type></type>
      <name>NEDCrossValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ad76cc4cfebd80b6e5d3c8a6875da3a25</anchor>
      <arglist>(bool parsedExpr, NEDResourceCache *resolver, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDCrossValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a71cc25e0839101d4ae7892b14d1e44e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>findChildWithTagAndAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>acb0cad0ae20d2c69e1200cb296b636c5</anchor>
      <arglist>(NEDElement *node, int tag, const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab56cc1b33f890c70ab62528000e6c9b7</anchor>
      <arglist>(GateElement *gate, bool hasGateIndex, bool isInput, NEDElement *conn, bool isSrcGate)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateConnGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a29e6b782761a7426a44dd9c8758aa00e</anchor>
      <arglist>(const char *submodName, bool hasSubmodIndex, const char *gateName, bool hasGateIndex, NEDElement *parent, NEDElement *conn, bool isSrc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getXXXDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a5396990e17ee977e1492460320adfda4</anchor>
      <arglist>(const char *name, int tagcode1, int tagcode2=-1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getModuleDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a6dc0b1b052c733d0d9ead1031aeedbdc</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getChannelDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a6e4e571867d8895ea8a160c56d77543c</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getModuleInterfaceDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a258836c7bcd0557fb434eaac02805f7e</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getChannelInterfaceDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ad0f3545fde711cacf7bb0d2f543c4688</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getEnumDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a77f3c7651051d3bf46c2e79d92669324</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>getClassDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a9519dd26515fe575c647e01cd493d555</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>parsedExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>abb96d92f13ef9ef2075b9ae524defa25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDResourceCache *</type>
      <name>resolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a14d553fd1f5aecf2ab2d81790d67138c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDElement *</type>
      <name>moduleTypeDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a63b3ada4d40c27771dd612bf5289e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDCrossValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDDTDValidator</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</filename>
    <base>omnetpp::nedxml::NEDDTDValidatorBase</base>
    <member kind="function">
      <type></type>
      <name>NEDDTDValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a0d0be332c6bdc973dc7258fc94753968</anchor>
      <arglist>(NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDDTDValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a505238b0c8d8e0fbc0ea171b619e00c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDDTDValidatorBase</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</filename>
    <base>omnetpp::nedxml::NEDValidatorBase</base>
    <class kind="struct">omnetpp::nedxml::NEDDTDValidatorBase::Choice</class>
    <member kind="function">
      <type></type>
      <name>NEDDTDValidatorBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a53fe0cc18b033a7b66f5e4f20b7d62b5</anchor>
      <arglist>(NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>tryCheckChoice</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a5e3c75c38043f7374c6a8f176a859d00</anchor>
      <arglist>(NEDElement *node, NEDElement *&amp;curchild, int tags[], char mult)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSequence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a7dd356f6acfaa46b3d736781fb7e4607</anchor>
      <arglist>(NEDElement *node, int tags[], char mult[])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkChoice</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>ab3844e300fa88b78f2a28d51f062ebde</anchor>
      <arglist>(NEDElement *node, int tags[], char mult)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSeqOfChoices</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a3bf2983adc6d227c47f7654256940c9f</anchor>
      <arglist>(NEDElement *node, Choice choices[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEmpty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a30ea6587c9abcfa51e3cd94c4731ee91</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkRequiredAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>ad4e6a7f790ac89e208a43294b2aedbcb</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEnumeratedAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a9688e1355e171f9fd39b1efbd43b31a0</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *vals[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a4c683d312cce649e0518643f943f1262</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkCommentAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a91daced1ed1fa39a1eb98f58d50b3ae6</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSequence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a7dd356f6acfaa46b3d736781fb7e4607</anchor>
      <arglist>(NEDElement *node, int tags[], char mult[])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkChoice</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>ab3844e300fa88b78f2a28d51f062ebde</anchor>
      <arglist>(NEDElement *node, int tags[], char mult)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSeqOfChoices</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a3bf2983adc6d227c47f7654256940c9f</anchor>
      <arglist>(NEDElement *node, Choice choices[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEmpty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a30ea6587c9abcfa51e3cd94c4731ee91</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkRequiredAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>ad4e6a7f790ac89e208a43294b2aedbcb</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEnumeratedAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a9688e1355e171f9fd39b1efbd43b31a0</anchor>
      <arglist>(NEDElement *node, const char *attr, const char *vals[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a4c683d312cce649e0518643f943f1262</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkCommentAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDDTDValidatorBase.html</anchorfile>
      <anchor>a91daced1ed1fa39a1eb98f58d50b3ae6</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDElement</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDElement.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a0fbb4056854acaefc8657d3934644ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a770fb84134b7e0f0bd6fe2a96ea2d2bf</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7d8bcc807445d466316ac4c685d4faca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NEDElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a48b85598ec01d528e579990862f6a39a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>dupTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a8da6eec18c84f70ee767b875c0e90cb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ae5f9e0619276a0a5ece75f43b7c7348c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>abe8895427b86c5042cac9da2d01312d0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>getId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ad8bdfd64d40fffa6989905c0ef2d59d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a0225b359e80ca6f2672b1857a0741936</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a5524df9abf6d62335d9f659084180491</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a9a51918e98bc26acd3da543cd139b2ad</anchor>
      <arglist>(const char *loc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NEDSourceRegion &amp;</type>
      <name>getSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a6d7e8f64727238f11d601c17060b45b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ac5aeaf4afa08ed957d438e5521343529</anchor>
      <arglist>(const NEDSourceRegion &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDefaults</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a3a860c3446918103af579d5079ed7252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a2160913659a40615c078d816dc1dc615</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7165212cee5d6ad720f749b8dae49e86</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lookupAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a53e81fe251216e325f8b3510e15825d1</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ac134707b1c8ff112f96f52f61b706288</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a9d01aa4633af690703b1bcb3fd811f35</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7987b78b6a38e6215c96d9bd443b701d</anchor>
      <arglist>(int k, const char *value)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a1d6c8530525754f3854aa01ec1390282</anchor>
      <arglist>(const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aaef4c735f8ebfd253029315d21736928</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a6223a72fedd8468db292fdd0254a8403</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getParent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a777d09824214fc8fd584d2f71a8fd725</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getFirstChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a61ce7c2054094a97092e1add07e94226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getLastChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a37b9ee5690a6b680c69b8489301fd020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getNextSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a440c63f61aa22883baec291a51582293</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getPrevSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a202273650b763767eb33ff4e1063ee7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a166958318ea43d3ed1414a4d3afb2650</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildBefore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7d729b857e1e4188d71f0f0a799f0b03</anchor>
      <arglist>(NEDElement *where, NEDElement *newnode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>removeChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a85190e55f742198f027ab02346cdb2d6</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getFirstChildWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a592b285b1a6f47dfa4fe826b912f20be</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getNextSiblingWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>adb4d9f3ea5bc7f60db6ca878bbb138fa</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a95cf1fd0b95299e35611ccf8fe81c31d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildrenWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a948ce7b50693428095b156a16df2aefa</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getFirstChildWithAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a2c8fdcae83d7c5369fd7970b5d8a6d0d</anchor>
      <arglist>(int tagcode, const char *attr, const char *attrvalue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getParentWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a449b7f629dcf94aaf4b95e1cc069dcab</anchor>
      <arglist>(int tagcode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a81a64512fca525c0152dd1131678f776</anchor>
      <arglist>(NEDElementUserData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElementUserData *</type>
      <name>getUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aa01c08fe642fcdd1f2ed2bee9ae70b69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumCreated</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a22be40839ba01ebe633ebb24fb48fc85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumExisting</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aad1fc66eac05ff2b3423bbd14f8329fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>stringToBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aedcfde60cdf29b73c3a2cc3757212343</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static const char *</type>
      <name>boolToString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ac3396f34db702b892b13dc9be8514c36</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>stringToEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>af65132b827744b3ce3cf262aa7001d1f</anchor>
      <arglist>(const char *s, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static const char *</type>
      <name>enumToString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a1b822cdbe3713d52f858e24dfa4eb859</anchor>
      <arglist>(int b, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>validateEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aba14daa136035c68dbabf72743d21ffe</anchor>
      <arglist>(int b, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a0fbb4056854acaefc8657d3934644ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a770fb84134b7e0f0bd6fe2a96ea2d2bf</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7d8bcc807445d466316ac4c685d4faca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NEDElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a48b85598ec01d528e579990862f6a39a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>dupTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a8da6eec18c84f70ee767b875c0e90cb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ae5f9e0619276a0a5ece75f43b7c7348c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>abe8895427b86c5042cac9da2d01312d0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>getId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ad8bdfd64d40fffa6989905c0ef2d59d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a0225b359e80ca6f2672b1857a0741936</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a5524df9abf6d62335d9f659084180491</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a9a51918e98bc26acd3da543cd139b2ad</anchor>
      <arglist>(const char *loc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NEDSourceRegion &amp;</type>
      <name>getSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a6d7e8f64727238f11d601c17060b45b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ac5aeaf4afa08ed957d438e5521343529</anchor>
      <arglist>(const NEDSourceRegion &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDefaults</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a3a860c3446918103af579d5079ed7252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a2160913659a40615c078d816dc1dc615</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7165212cee5d6ad720f749b8dae49e86</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lookupAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a53e81fe251216e325f8b3510e15825d1</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>ac134707b1c8ff112f96f52f61b706288</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a9d01aa4633af690703b1bcb3fd811f35</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7987b78b6a38e6215c96d9bd443b701d</anchor>
      <arglist>(int k, const char *value)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a1d6c8530525754f3854aa01ec1390282</anchor>
      <arglist>(const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aaef4c735f8ebfd253029315d21736928</anchor>
      <arglist>(int k) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a6223a72fedd8468db292fdd0254a8403</anchor>
      <arglist>(const char *attr) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getParent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a777d09824214fc8fd584d2f71a8fd725</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getFirstChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a61ce7c2054094a97092e1add07e94226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getLastChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a37b9ee5690a6b680c69b8489301fd020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getNextSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a440c63f61aa22883baec291a51582293</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getPrevSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a202273650b763767eb33ff4e1063ee7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a166958318ea43d3ed1414a4d3afb2650</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildBefore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a7d729b857e1e4188d71f0f0a799f0b03</anchor>
      <arglist>(NEDElement *where, NEDElement *newnode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>removeChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a85190e55f742198f027ab02346cdb2d6</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getFirstChildWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a592b285b1a6f47dfa4fe826b912f20be</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getNextSiblingWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>adb4d9f3ea5bc7f60db6ca878bbb138fa</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a95cf1fd0b95299e35611ccf8fe81c31d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildrenWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a948ce7b50693428095b156a16df2aefa</anchor>
      <arglist>(int tagcode) const </arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getFirstChildWithAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a2c8fdcae83d7c5369fd7970b5d8a6d0d</anchor>
      <arglist>(int tagcode, const char *attr, const char *attrvalue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getParentWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a449b7f629dcf94aaf4b95e1cc069dcab</anchor>
      <arglist>(int tagcode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumCreated</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a22be40839ba01ebe633ebb24fb48fc85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumExisting</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aad1fc66eac05ff2b3423bbd14f8329fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>a81a64512fca525c0152dd1131678f776</anchor>
      <arglist>(NEDElementUserData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElementUserData *</type>
      <name>getUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElement.html</anchorfile>
      <anchor>aa01c08fe642fcdd1f2ed2bee9ae70b69</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDElementFactory</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDElementFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDElementFactory</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementFactory.html</anchorfile>
      <anchor>afada598c8d18dda920117f8b8e29fcea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>createElementWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementFactory.html</anchorfile>
      <anchor>a2911921353b89bec1020752fdada660e</anchor>
      <arglist>(const char *tagname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>createElementWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementFactory.html</anchorfile>
      <anchor>a436cae0649f428a6e8f14fca55614148</anchor>
      <arglist>(int tagcode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NEDElementFactory *</type>
      <name>getInstance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementFactory.html</anchorfile>
      <anchor>abd4f1b786bd0ec274965cfc0da3f907a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDElementUserData</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDElementUserData.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDElementUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUserData.html</anchorfile>
      <anchor>a991216d58be1fdb9846c9b18e96f0db5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDElementUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUserData.html</anchorfile>
      <anchor>a7a472fe6da9849e229cd3f0ab02cd23c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDElementUtil</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getLocalStringProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ae2d3cdea8d22bf33f143875182dfa4cb</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getLocalBoolProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>aa8c2021463e305223d71ec0f7e65daf6</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PropertyElement *</type>
      <name>getLocalProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a4ce8a828ddf229ffdd1f5a0db63447df</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiteralElement *</type>
      <name>getTheOnlyValueFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a6ec1f6197c8fbf529e13b9e895ff48a3</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>propertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a86b6d0fd716fa1ee734f804c004e7f71</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>propertyAsString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ab23216deddb557ed3031a16b979b1793</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a4ba72c9c7c2cca8d17b2cbc508552929</anchor>
      <arglist>(NEDElement *node1, NEDElement *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compareTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ab9f905fe36160e41072973bae5aaf393</anchor>
      <arglist>(NEDElement *node1, NEDElement *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNEDType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a0ef5f256504eb396684c6c68e698ae7c</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getLocalStringProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ae2d3cdea8d22bf33f143875182dfa4cb</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getLocalBoolProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>aa8c2021463e305223d71ec0f7e65daf6</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PropertyElement *</type>
      <name>getLocalProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a4ce8a828ddf229ffdd1f5a0db63447df</anchor>
      <arglist>(NEDElement *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiteralElement *</type>
      <name>getTheOnlyValueFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a6ec1f6197c8fbf529e13b9e895ff48a3</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>propertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a86b6d0fd716fa1ee734f804c004e7f71</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>propertyAsString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ab23216deddb557ed3031a16b979b1793</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a4ba72c9c7c2cca8d17b2cbc508552929</anchor>
      <arglist>(NEDElement *node1, NEDElement *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compareTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>ab9f905fe36160e41072973bae5aaf393</anchor>
      <arglist>(NEDElement *node1, NEDElement *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNEDType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDElementUtil.html</anchorfile>
      <anchor>a0ef5f256504eb396684c6c68e698ae7c</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDErrorStore</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDErrorStore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a06469eaf17f4e156a44e5deeb2cb9129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NEDErrorStore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ae9c84eefa807efa0b9620d9cdf0184f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrintToStderr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>aa19428448a259a39042241c6a57fde1f</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>afa4d6db2f58eacaac97b89a8bc2dfbe7</anchor>
      <arglist>(NEDElement *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ab4e81cecd0bafdf12c66cb433d9a5877</anchor>
      <arglist>(const char *location, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWarning</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ad34583485f46d4802bf378360df45236</anchor>
      <arglist>(NEDElement *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWarning</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a4bc594376a929050061e979f6ff08d4d</anchor>
      <arglist>(const char *location, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a364251e882db16716f8b91f372467b17</anchor>
      <arglist>(NEDElement *context, int severity, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ad5d22a6ba47e9ce7a53b9f683c938496</anchor>
      <arglist>(const char *location, int severity, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ac6e61de369e994009e36f344f99c15ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numMessages</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ab2eea6d374340a059266520c40420ca4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a549d1d33248f7016bad7049d79a42d4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findFirstErrorFor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>aa04f31877900a657879b0b1cd73e1892</anchor>
      <arglist>(NEDElement *node, int startIndex) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorSeverity</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a18182c8f369d4ceb3a362b1dc7370b41</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>errorSeverityCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a5f7ec018a8a99265dd00db365c04ddc4</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a2b5d10e07bf82a05f71cba8205e96c7c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>errorContext</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a86f07f34be7ba074d1db19efc7070cf2</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a73584924e80b722a869968187f2db036</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>severityName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a151623967094e13c9ccfacd81f95b7a2</anchor>
      <arglist>(int severity)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorSeverity</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a18182c8f369d4ceb3a362b1dc7370b41</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>errorSeverityCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a5f7ec018a8a99265dd00db365c04ddc4</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a2b5d10e07bf82a05f71cba8205e96c7c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>errorContext</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a86f07f34be7ba074d1db19efc7070cf2</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDErrorStore.html</anchorfile>
      <anchor>a73584924e80b722a869968187f2db036</anchor>
      <arglist>(int i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDException</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDException.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDException.html</anchorfile>
      <anchor>ab2e73eea56d257070e8e288455aebe24</anchor>
      <arglist>(const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDException.html</anchorfile>
      <anchor>a2ffc1f284feb6ab64bc5f6d884192a4d</anchor>
      <arglist>(NEDElement *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDException.html</anchorfile>
      <anchor>a5baa90d03760ddfa587483b49cc637a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDException.html</anchorfile>
      <anchor>acbaaf3d1d8a8d9a26f8a858f06563843</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>msg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDException.html</anchorfile>
      <anchor>a30c3e2a6148eb3534efc9e78020a8da8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDFileBuffer</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDFileBuffer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a456333a9d9d3f19ff309131f2265bea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NEDFileBuffer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>ac10c3b0f5ca763aad8b5599e54c5b6b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>abcbff2d0aa350c459669eecc1df6816e</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a5deaccc57a2c1fc00d4077c8e420a0f3</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a8b04a1d9a60eb8ad8f9e36ea54ffd24e</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>ad0313ed8ab51dd36a1947f6912a47d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a8938e5fc237feae38275968f9bc66108</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a8237395b0802c9b6988e08f200378249</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getNextInnerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a8ffd0fca7a8550d20759dd85ad1452ba</anchor>
      <arglist>(YYLTYPE &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>getFullTextPos</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a37381a2f40fd1d66b5b5fe3eecdf542a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFullText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a791450ab81320f4a48482b759b29c2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimSpaceAndComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDFileBuffer.html</anchorfile>
      <anchor>a24bf78cdfa6596d127b50cf38c29db67</anchor>
      <arglist>(YYLTYPE &amp;pos)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedFileElement</name>
    <filename>classomnetpp_1_1nedxml_1_1NedFileElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a94ceda1cd88cd5e53e78d31627804010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a3576dd8c99d689f06b3179d7bce55e22</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a353eb402f3c8bc9923f4fa49e31afce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>aa086e0080f74dd33d1014c592069aeb7</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a192a8ce86fbfc89350d5d4ff1e74fb3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ac51bd40f4ec4d14cec14237842b97b80</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>afaea14395b08c38952e00ada064a3ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2e9f82f6404b6c93ebdc2854bfb4070e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getNextNedFileSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a49f9c7adf65ccc9edff8cda3becf6b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>getFirstPackageChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ac9ce6d817493ae621753623aa0849bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>getFirstImportChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2d7ad90b5c5944b6a2c4cb8d3e66d591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getFirstPropertyDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a39d2df67ca4dd90a542ffa79b25291a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getFirstSimpleModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a96c594f97fbe15607b3af5582ca5643f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getFirstCompoundModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a4487ff3816621d813849226ce335523c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getFirstModuleInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a111253aed20662582df96d4416ca17f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getFirstChannelChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a190a1939d5060860ce3e89a1e1d6a909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getFirstChannelInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a72f584be8ffd6f3c9fce624233a5db5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a94ceda1cd88cd5e53e78d31627804010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a3576dd8c99d689f06b3179d7bce55e22</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedFileElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a353eb402f3c8bc9923f4fa49e31afce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>aa086e0080f74dd33d1014c592069aeb7</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a192a8ce86fbfc89350d5d4ff1e74fb3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ac51bd40f4ec4d14cec14237842b97b80</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>afaea14395b08c38952e00ada064a3ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2e9f82f6404b6c93ebdc2854bfb4070e</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getNextNedFileSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a49f9c7adf65ccc9edff8cda3becf6b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>getFirstPackageChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>ac9ce6d817493ae621753623aa0849bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImportElement *</type>
      <name>getFirstImportChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a2d7ad90b5c5944b6a2c4cb8d3e66d591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getFirstPropertyDeclChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a39d2df67ca4dd90a542ffa79b25291a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getFirstSimpleModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a96c594f97fbe15607b3af5582ca5643f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getFirstCompoundModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a4487ff3816621d813849226ce335523c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getFirstModuleInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a111253aed20662582df96d4416ca17f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getFirstChannelChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a190a1939d5060860ce3e89a1e1d6a909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getFirstChannelInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedFileElement.html</anchorfile>
      <anchor>a72f584be8ffd6f3c9fce624233a5db5c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NEDLookupContext</name>
    <filename>structomnetpp_1_1nedxml_1_1NEDLookupContext.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDLookupContext</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDLookupContext.html</anchorfile>
      <anchor>ad91308450b061ac7e3c5f4b4a6a72d37</anchor>
      <arglist>(NEDElement *e, const char *q)</arglist>
    </member>
    <member kind="variable">
      <type>NEDElement *</type>
      <name>element</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDLookupContext.html</anchorfile>
      <anchor>ae197ff7ce56b721af8503c547aecbf3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>qname</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDLookupContext.html</anchorfile>
      <anchor>af9d3de1f7f9ff554ce07ad3fcfa22162</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDParser</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDParser.html</filename>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a233c20d8d31e8852227754a3008410f4</anchor>
      <arglist>(const char *msg, int line)</arglist>
    </member>
    <member kind="function">
      <type>NEDErrorStore *</type>
      <name>getErrors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a4948e8fa8daa28ff1e1c07b7914cb0d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NEDFileBuffer *</type>
      <name>getSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>ad5e8d62b04f4c936dc81a6d622b49e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a098421e46ca3283d2858fd59d9d23db5</anchor>
      <arglist>(NEDErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NEDParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>ac0af87608cc4da3f52d4e4159ddc7272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParseExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a70d7a4419213a3961e050f5e567b85cc</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoreSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>aa1dd1d34c9b703b73e5601ec34362e39</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getParseExpressionsFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a6f3654bd21bc6a71b2d92d9dfb5d03cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStoreSourceFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a4c163f481d2a03145eb6b6a558f6cd30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>adad5fe420fd1a780092c94f24f73239e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>parseNEDFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a3dc2e4f41c029ec7fbbbc80d85f48b42</anchor>
      <arglist>(const char *osfname, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>parseNEDText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>abc9e46d336dbe352e942801d173139ef</anchor>
      <arglist>(const char *nedtext, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>parseNEDExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>aa79be592b2b7fda89ef6370250cb7264</anchor>
      <arglist>(const char *nedexpression)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>parseMSGFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a2de6769da9aee8ac6e07ce5cd746eb2f</anchor>
      <arglist>(const char *osfname, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>parseMSGText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a57bd2972eda3dfdfdb23fc6ff3986853</anchor>
      <arglist>(const char *nedtext, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getBuiltInDeclarations</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a98bff2eab7161defa20976806b9be1e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a8e24a79cc6ed4a549e0a11fe4dcd5a44</anchor>
      <arglist>(const char *osfname, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a940d084315dd97a71e798eec6f7db6c8</anchor>
      <arglist>(const char *nedtext, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>parseNED</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a3a772707ae4db978694b7cbfb6abfb30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NEDElement *</type>
      <name>parseMSG</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>add25c469081296834096367f715b75e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>guessIsNEDInNewSyntax</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a644c94a75a131b1939ca9ddf60a84d46</anchor>
      <arglist>(const char *txt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>parseexpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a7431d16632ea0e2cbde7ddf7445e3c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>storesrc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a651791e7e7f2bec7a11c8f341d982188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>filename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a7efa5e9c7494c7d4586359300221aa5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>a9885c2efa6d03712498449b432298b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDFileBuffer *</type>
      <name>nedsource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDParser.html</anchorfile>
      <anchor>aa848daa5c13470a9c830d688d16698de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDResourceCache</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</filename>
    <class kind="class">omnetpp::nedxml::NEDResourceCache::CachedTypeNames</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache::INEDTypeNames</class>
    <class kind="struct">omnetpp::nedxml::NEDResourceCache::PendingNedType</class>
    <member kind="function">
      <type></type>
      <name>NEDResourceCache</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a8a6040754e18fe2a383620ff3809724d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDResourceCache</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a1a7a5b79457267666487cbe475a18906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>loadNedSourceFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a7102a7ba0003c09ca98ef3c8903a36c5</anchor>
      <arglist>(const char *foldername)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>afe90062a27aa54248ced363d020ec6fe</anchor>
      <arglist>(const char *nedfname, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNedText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a3689a702755496061dab4a992191f0e5</anchor>
      <arglist>(const char *name, const char *nedtext, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doneLoadingNedFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>aef40a6225528aec71dc2397860c6b5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a6a83b9fa1f819157115607c6ee44164b</anchor>
      <arglist>(const char *fname, NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a3863e340521c89c910e11a113f1d8914</anchor>
      <arglist>(const char *fname) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getParentPackageNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a47e1a8920d06d551b4cae0390375d329</anchor>
      <arglist>(NedFileElement *nedfile) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDTypeInfo *</type>
      <name>lookup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a9603e63857846151a8c89c1512fff58b</anchor>
      <arglist>(const char *qname) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDTypeInfo *</type>
      <name>getDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a7f0904413386a29535b78f95d11fbe5b</anchor>
      <arglist>(const char *qname) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>resolveNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a1159ec3c35fad972768dcc4a0db1b242</anchor>
      <arglist>(const NEDLookupContext &amp;context, const char *nedtypename, INEDTypeNames *qnames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>resolveNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a4a3d74aa456447fa4aece88e60b92acb</anchor>
      <arglist>(const NEDLookupContext &amp;context, const char *nedtypename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; std::string &gt; &amp;</type>
      <name>getTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>ae5fd296720a3df081bdb358dc006c7ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedPackageForFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>aaedf86e8eb5186f6f8df83fc31feeb3a</anchor>
      <arglist>(const char *folder) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NEDLookupContext</type>
      <name>getParentContextOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>ac8df37baa90d98055e85b95042d627fa</anchor>
      <arglist>(const char *qname, NEDElement *node)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, NEDElement * &gt;</type>
      <name>NEDFileMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a60fc6d3ae64c8ff74b197b88815dfc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, NEDTypeInfo * &gt;</type>
      <name>NEDTypeInfoMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a390b87317de6a2bd8a144e92cb31a237</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>StringMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a09af799878f7f9f2af8b7133bc151874</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerBuiltinDeclarations</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a87621336039da0838884e1ceee985546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>doLoadNedSourceFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a7563634de213fca8bd564d0cf905ebad</anchor>
      <arglist>(const char *foldername, const char *expectedPackage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doLoadNedFileOrText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a8138bd90a35fd21e196e1ad0f08a413d</anchor>
      <arglist>(const char *nedfname, const char *nedtext, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>parseAndValidateNedFileOrText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>af8b563a10aa17c3737929c85f6d3c349</anchor>
      <arglist>(const char *nedfname, const char *nedtext, bool isXML)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>determineRootPackageName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a4e70fbb03360a1b3dc94fcdd66e0a388</anchor>
      <arglist>(const char *nedSourceFolderName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedSourceFolderForFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a38b80b90a649d6e9a91b3eacdb764df4</anchor>
      <arglist>(const char *folder) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>collectNedTypesFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>ae5dedceadcad73b3457305a0d915e426</anchor>
      <arglist>(NEDElement *node, const std::string &amp;namespacePrefix, bool areInnerTypes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>collectNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a18eaa0c05dc7f7129d7b79673726e5e2</anchor>
      <arglist>(const char *qname, bool isInnerType, NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>areDependenciesResolved</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a82750c3f260b4185c5db8f87b33559fc</anchor>
      <arglist>(const char *qname, NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerPendingNedTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a01628e3e79ab131be01784ea0ecb5490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a0c8b81db08e9d2020b859b35b80a93ac</anchor>
      <arglist>(const char *qname, bool isInnerType, NEDElement *node)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDFileMap</type>
      <name>files</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a937e18b8efd27fce7054d2f466601130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDTypeInfoMap</type>
      <name>nedTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a7725e10e3375e7d2e11a8a1b62454030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>nedTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a369311ac297a2534a5a80599bd7e2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringMap</type>
      <name>folderPackages</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>a5144b39c8dd866c5ba1f4ec4eceee02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PendingNedType &gt;</type>
      <name>pendingList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDResourceCache.html</anchorfile>
      <anchor>ae38fef7d3945d874f4efe897df001646</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDSAXHandler</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</filename>
    <base>omnetpp::nedxml::SAXHandler</base>
    <member kind="function">
      <type></type>
      <name>NEDSAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a8acf223280110b3d806b75ea2942785c</anchor>
      <arglist>(const char *filename, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDSAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a68e6b0de4b19f2f4ba4271dc0d141adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a775a44ed61558e19257bb80547595b32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>ad31b64b6873dce1213c54526ba4b08e0</anchor>
      <arglist>(const char *name, const char **atts) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>ae9e47045c32ddad317d86e4f1f535113</anchor>
      <arglist>(const char *name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>aa6e779a1acdaeb41c04f1e8df611d25b</anchor>
      <arglist>(const char *s, int len) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>abfa3de2e89b18795a78679db92bd2ec3</anchor>
      <arglist>(const char *target, const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a798d9d1a920b12875e97704b3948f3ee</anchor>
      <arglist>(const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a27d772de2d9c4350de0b15d2dcf7566a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>af278d582cc76d0cab91be78e4c19bf5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>ad31b64b6873dce1213c54526ba4b08e0</anchor>
      <arglist>(const char *name, const char **atts) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>ae9e47045c32ddad317d86e4f1f535113</anchor>
      <arglist>(const char *name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>aa6e779a1acdaeb41c04f1e8df611d25b</anchor>
      <arglist>(const char *s, int len) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>abfa3de2e89b18795a78679db92bd2ec3</anchor>
      <arglist>(const char *target, const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a798d9d1a920b12875e97704b3948f3ee</anchor>
      <arglist>(const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>a27d772de2d9c4350de0b15d2dcf7566a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSAXHandler.html</anchorfile>
      <anchor>af278d582cc76d0cab91be78e4c19bf5b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NEDSourceRegion</name>
    <filename>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDSourceRegion</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</anchorfile>
      <anchor>a4d463c4b40c9fbbdf74b9d36c7598cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startLine</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</anchorfile>
      <anchor>aae69f615454d4cce6fddf760c20e9eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startColumn</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</anchorfile>
      <anchor>a812398f271aebf690d281beac813fd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endLine</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</anchorfile>
      <anchor>ae558febfd4bb35f2cb24e572579516ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endColumn</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDSourceRegion.html</anchorfile>
      <anchor>ac2d756f3d6a52f8b73f2025847c18f79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDSyntaxValidator</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</filename>
    <base>omnetpp::nedxml::NEDValidatorBase</base>
    <member kind="function">
      <type></type>
      <name>NEDSyntaxValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a9f2e0330de7fde05f3ba0bbb3ea5b36d</anchor>
      <arglist>(bool parsedExpr, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDSyntaxValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a31e70e291fd000eca09b46a0528b9ea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkExpressionAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a55ca71fcc304643658e66b85007682aa</anchor>
      <arglist>(NEDElement *node, const char *attrs[], bool optional[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkDottedNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a2c75076cb8d7c98e99a95f1adee9fb2d</anchor>
      <arglist>(NEDElement *node, const char *attr, bool wildcardsAllowed)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkPropertyNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ae2523bb45780b33048dc0b710a157ee1</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkPropertyIndexAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac317164ea69e9abd5844944c19bf50fa</anchor>
      <arglist>(NEDElement *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isWithinSubcomponent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa1d2fedd4b68ccba3d123423c2ea2be3</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isWithinInnerType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>adced81f16eacbbf03ca4e86f91255414</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>parsedExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>abb96d92f13ef9ef2075b9ae524defa25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>abe4065ed2d8de05913eefa5504b3de17</anchor>
      <arglist>(MsgFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>afc71ed8909cd78a719c8dcb296e956b8</anchor>
      <arglist>(NamespaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a48a7d292b5afaa0773f03bc454de34e1</anchor>
      <arglist>(CplusplusElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a60e2705b4563216dc422eea72dbf7537</anchor>
      <arglist>(StructDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a0e96be8c453a11596db8f5d990bc31e9</anchor>
      <arglist>(ClassDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ac5c507de2291e0a0394fae7972ee5a3d</anchor>
      <arglist>(MessageDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ae79ab4aab8e39f471dbcaf53419793a1</anchor>
      <arglist>(PacketDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a9e869327778431cc2b7a91604e65b9d5</anchor>
      <arglist>(EnumDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a3fcbb2160c56c2b8309692022f17d31e</anchor>
      <arglist>(EnumElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a25282a018949c132636162ffb48b81e3</anchor>
      <arglist>(EnumFieldsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>ab5fae6be220fb2c6ac0fbc1d81f05754</anchor>
      <arglist>(EnumFieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a00075636d83b1c102e55e2a4777d672a</anchor>
      <arglist>(MessageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a90abb45e52e951f7bafde3fcb2665fae</anchor>
      <arglist>(PacketElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a580b1a9c807eeb29dd35e5058f6ff211</anchor>
      <arglist>(ClassElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aeada6eb1acbc20bd83ad58be20b44fde</anchor>
      <arglist>(StructElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>a2971c59a0f453714a94cc66e98cb2a00</anchor>
      <arglist>(FieldElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDSyntaxValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDTools</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDTools.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>repairNEDElementTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTools.html</anchorfile>
      <anchor>a643bd7f1ea888a4b1eec174263ba3e77</anchor>
      <arglist>(NEDElement *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>splitToFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTools.html</anchorfile>
      <anchor>ae1b5de09899280acbdaaef6e41592b1a</anchor>
      <arglist>(FilesElement *tree)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDTypeInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIMPLE_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a7e811e6a2ecdbdb3e43cef078b1fac4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPOUND_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a1b7e373f259e2901b83809b06669bf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULEINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a87403ce68d4fdd23b10a8795ba42175a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNEL</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7ad9d3e3b5dc628d73e5ec4da418f2a6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNELINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a372ad21d19dcd54dc6fadc4077223948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIMPLE_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a7e811e6a2ecdbdb3e43cef078b1fac4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPOUND_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a1b7e373f259e2901b83809b06669bf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULEINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a87403ce68d4fdd23b10a8795ba42175a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNEL</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7ad9d3e3b5dc628d73e5ec4da418f2a6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNELINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a372ad21d19dcd54dc6fadc4077223948</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDTypeInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a68ffb91989766aaff56bc914ef7eb70a</anchor>
      <arglist>(NEDResourceCache *resolver, const char *qname, bool isInnerType, NEDElement *tree)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDTypeInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ac1d239193b059cf4c0051ce575a28beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a70f88e8edc62f8abd5db1b0328eb7ee5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getFullName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ad1fc98ea6bfdb645f6d08cbc065245fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDElement *</type>
      <name>getTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ad3baff45fe489ce57ab3379eb7a1ba27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NEDResourceCache *</type>
      <name>getResolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a62ba64cb1561afc9d4c8e1d1a356393e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a20b99bce751c80cdb1b9066fe93dea67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceFileName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>aefb4f1dff892ccbd4480a245fc07dc1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a3260c85dce592f366cd8efe168781537</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>info</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a39640237e61d62b024692ae017b9efa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>adaa7ab69c6f2f59396ad178b912e9ec4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numExtendsNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a54a4cb5ee576414786d1e75595f9b688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a7bdea5d9d569e4818fdc5db6ec29e380</anchor>
      <arglist>(int k) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInterfaceNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a6e066fc5cf12fb24fecf9040669a06e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a7508f090e99187fd43d40255f1409f86</anchor>
      <arglist>(int k) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportsInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a31af9eaf2cb6e12300a90358c7f64f69</anchor>
      <arglist>(const char *qname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInnerType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ad13f4e7384511f20680dcd0084385bc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getEnclosingTypeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a77b570542bbb553ed56ee682331a6800</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNetwork</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1aa399e9058821fb7720500bd4ada262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getImplementationClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab709ec1c8312d0e44fc6a777e983df32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getPackageProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>acfdece8d62b535fd937baf8c0beab8d7</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getCxxNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a9f18fc371db8c7a779b01fbeceaf927f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NEDTypeInfo *</type>
      <name>getSuperDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>aeac53a7d7dbe316ab8e24f6fa5dc8f99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ParametersElement *</type>
      <name>getParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab7ea2d9c39ad0d2e38e8a803c3ae584c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GatesElement *</type>
      <name>getGatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a117609b60354168aa67ab7158d70d481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SubmodulesElement *</type>
      <name>getSubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a39f1da9f4166811e5b8bfc9524fc9013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionsElement *</type>
      <name>getConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a3d75200e8f5063022f3defda28099bf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getLocalSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae18e1e6e99fa0801ff3e302e39507fee</anchor>
      <arglist>(const char *submoduleName) const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getLocalConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a75c859b41eb09aea922aa6634f5f1b16</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>afb7ff00dadb1c8dd0d9d9d640803f953</anchor>
      <arglist>(const char *submoduleName) const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>afa232658954f2cebc92baf80de41def7</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findLocalParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae241c11565100dc101944cdc7f06811c</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a9bc44bd3d896d242deced1692f6f08e9</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findLocalGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>add68f5a21f7f417450a028678441b458</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a7df75397b594bf0f25152d666964d226</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>StringToIntMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae30c4f68e0a0aeaf24d5bad2978778d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkComplianceToInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a1c0f9b1ef6500d68bfb6abf7749b15b2</anchor>
      <arglist>(NEDTypeInfo *interfaceDecl)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDResourceCache *</type>
      <name>resolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a14d553fd1f5aecf2ab2d81790d67138c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab6f4e6d3fde00ce906e46494f60dfe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>qualifiedName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae3b073d6fb7946c7b34818d9238c410d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isInner</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a00356f2422f9b133b4a7ea25f74abaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDElement *</type>
      <name>tree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>add980672230cd5015b75557834d788af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>extendsNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab96f8893e6dabd377ae7580edee5bba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>interfaceNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a4ddb3aa4285d4ef2dab5d84f2d3be12d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>enclosingTypeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a12a9d7e0b0afa670a650f6998eb8c4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>implClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a0bbef31a11570fa3b90465acb44b783b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ParametersElement *</type>
      <name>getParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ab7ea2d9c39ad0d2e38e8a803c3ae584c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GatesElement *</type>
      <name>getGatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a117609b60354168aa67ab7158d70d481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SubmodulesElement *</type>
      <name>getSubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a39f1da9f4166811e5b8bfc9524fc9013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionsElement *</type>
      <name>getConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a3d75200e8f5063022f3defda28099bf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getLocalSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae18e1e6e99fa0801ff3e302e39507fee</anchor>
      <arglist>(const char *submoduleName) const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getLocalConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a75c859b41eb09aea922aa6634f5f1b16</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>afb7ff00dadb1c8dd0d9d9d640803f953</anchor>
      <arglist>(const char *submoduleName) const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>afa232658954f2cebc92baf80de41def7</anchor>
      <arglist>(long id) const </arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findLocalParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>ae241c11565100dc101944cdc7f06811c</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a9bc44bd3d896d242deced1692f6f08e9</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findLocalGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>add68f5a21f7f417450a028678441b458</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDTypeInfo.html</anchorfile>
      <anchor>a7df75397b594bf0f25152d666964d226</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDValidatorBase</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a0bfc99ec495942065f521d74b7dd866c</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab3cd16948c7c178e6d9bdeb01743c89a</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDValidatorBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a748dfa5176b4427df1828dd606f66787</anchor>
      <arglist>(NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDValidatorBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4cb619ab65e390d0b8882087edd6a191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a3cc661824d65e4c8ba68ab767897e2ff</anchor>
      <arglist>(FilesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab8130dc15fa67f445fcec221312cd501</anchor>
      <arglist>(NedFileElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a62445a82ced220f70b2dfaa1683b2064</anchor>
      <arglist>(CommentElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a8953221dbe993ad13192d78cc7365bac</anchor>
      <arglist>(PackageElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>adc3a594d803481d9650bbaa7a0518980</anchor>
      <arglist>(ImportElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac205105e277b0d646b22252b5a8e3649</anchor>
      <arglist>(PropertyDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4e7dbca8c69479d8f3ebda17b6c04e77</anchor>
      <arglist>(ExtendsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a18586a6ab0d357debc4bb0ba2ff9c70c</anchor>
      <arglist>(InterfaceNameElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a416b219cf5b5a20f6d109c97e76ae3a2</anchor>
      <arglist>(SimpleModuleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4df6b143bc191bcea37e48d04a05cd58</anchor>
      <arglist>(ModuleInterfaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9957598ad23082074fbf19ba1b234ead</anchor>
      <arglist>(CompoundModuleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad57cc91f992008645020bf7a45663944</anchor>
      <arglist>(ChannelInterfaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a315de01d2c490fbc6478529112249f68</anchor>
      <arglist>(ChannelElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a969c64d8d0fa013c2b2891d970e8da0c</anchor>
      <arglist>(ParametersElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac25bf21c911cfe9e0aca3762e8dbf5ff</anchor>
      <arglist>(ParamElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>acf3af7c91e87b312c3598c64fe99c9e5</anchor>
      <arglist>(PropertyElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aa96ad6d2c76a77495e7f0b61882b86ec</anchor>
      <arglist>(PropertyKeyElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>adee418cd0cb5e5a418053fcad88ef0aa</anchor>
      <arglist>(GatesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad6c41a3ade4bcf7c0bee00f8de9d3f7a</anchor>
      <arglist>(GateElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9e63069f0de83d947fa5005b0811a3a3</anchor>
      <arglist>(TypesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab8b7429250c10e187a352972628ddadf</anchor>
      <arglist>(SubmodulesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9c4e5cea8214d364f1e194cb415588c8</anchor>
      <arglist>(SubmoduleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>abb14a5fb4142c54039b29e06cb14544a</anchor>
      <arglist>(ConnectionsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aa641440fa55c41c0226f8595a70d6e64</anchor>
      <arglist>(ConnectionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a584bc55cf9b3cb85af1b4cb36417ae8f</anchor>
      <arglist>(ConnectionGroupElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac6e6cd296d99051cfbf14ace441fb5cf</anchor>
      <arglist>(LoopElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a31b982e503a4968d5add273f27ddc956</anchor>
      <arglist>(ConditionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a97d74fd4168ae1d41820d7a6c035691b</anchor>
      <arglist>(ExpressionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4c7ead510b888c059eb07b569b99f13c</anchor>
      <arglist>(OperatorElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a1581fe20878acea3ae04ae1c1769481d</anchor>
      <arglist>(FunctionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9227458d1ad08d8bb3d6a7d23078b337</anchor>
      <arglist>(IdentElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a771af26539ab3291d4f429e2684313ba</anchor>
      <arglist>(LiteralElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a7c37fea3d8124c4647a8580e08160874</anchor>
      <arglist>(MsgFileElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a73785fd3d43a32e6846eb509b65b3dc2</anchor>
      <arglist>(NamespaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a865099d448997e4f1036f550192bf556</anchor>
      <arglist>(CplusplusElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a11869a76ee20f2d61c5ff692155c0ec2</anchor>
      <arglist>(StructDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a6ddbf8ec1dfbc72f2ea0b50ac786d885</anchor>
      <arglist>(ClassDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad50cb1bc9e1d93e85a675cc8820713ba</anchor>
      <arglist>(MessageDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a5600eee12c6da14b7bba44780800e45c</anchor>
      <arglist>(PacketDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a381a4895c007aab1da3fdb8feef54811</anchor>
      <arglist>(EnumDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab838d3fb2d0611577bcacd467c3bcb95</anchor>
      <arglist>(EnumElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a8e96da116ce09487b9b983479545d7c9</anchor>
      <arglist>(EnumFieldsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a674656a0d595b45e50396bc032ecace3</anchor>
      <arglist>(EnumFieldElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>acee9cb9455ef7c8f08974e2bf9e0c94e</anchor>
      <arglist>(MessageElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae841459dfe3fed4536e3934bbc130562</anchor>
      <arglist>(PacketElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aac6806f034528090a1654780dc2da011</anchor>
      <arglist>(ClassElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae8f005db4ef1c729b3d86129b9798e1b</anchor>
      <arglist>(StructElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a03b45a8cb6dfe8ea9b2880bed7da04c4</anchor>
      <arglist>(FieldElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae7475cb5fd75e034d0039435eef3fd64</anchor>
      <arglist>(UnknownElement *node)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NEDErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9885c2efa6d03712498449b432298b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NEDValidatorBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a748dfa5176b4427df1828dd606f66787</anchor>
      <arglist>(NEDErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDValidatorBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4cb619ab65e390d0b8882087edd6a191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a3cc661824d65e4c8ba68ab767897e2ff</anchor>
      <arglist>(FilesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab8130dc15fa67f445fcec221312cd501</anchor>
      <arglist>(NedFileElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a62445a82ced220f70b2dfaa1683b2064</anchor>
      <arglist>(CommentElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a8953221dbe993ad13192d78cc7365bac</anchor>
      <arglist>(PackageElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>adc3a594d803481d9650bbaa7a0518980</anchor>
      <arglist>(ImportElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac205105e277b0d646b22252b5a8e3649</anchor>
      <arglist>(PropertyDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4e7dbca8c69479d8f3ebda17b6c04e77</anchor>
      <arglist>(ExtendsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a18586a6ab0d357debc4bb0ba2ff9c70c</anchor>
      <arglist>(InterfaceNameElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a416b219cf5b5a20f6d109c97e76ae3a2</anchor>
      <arglist>(SimpleModuleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4df6b143bc191bcea37e48d04a05cd58</anchor>
      <arglist>(ModuleInterfaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9957598ad23082074fbf19ba1b234ead</anchor>
      <arglist>(CompoundModuleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad57cc91f992008645020bf7a45663944</anchor>
      <arglist>(ChannelInterfaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a315de01d2c490fbc6478529112249f68</anchor>
      <arglist>(ChannelElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a969c64d8d0fa013c2b2891d970e8da0c</anchor>
      <arglist>(ParametersElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac25bf21c911cfe9e0aca3762e8dbf5ff</anchor>
      <arglist>(ParamElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>acf3af7c91e87b312c3598c64fe99c9e5</anchor>
      <arglist>(PropertyElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aa96ad6d2c76a77495e7f0b61882b86ec</anchor>
      <arglist>(PropertyKeyElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>adee418cd0cb5e5a418053fcad88ef0aa</anchor>
      <arglist>(GatesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad6c41a3ade4bcf7c0bee00f8de9d3f7a</anchor>
      <arglist>(GateElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9e63069f0de83d947fa5005b0811a3a3</anchor>
      <arglist>(TypesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab8b7429250c10e187a352972628ddadf</anchor>
      <arglist>(SubmodulesElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9c4e5cea8214d364f1e194cb415588c8</anchor>
      <arglist>(SubmoduleElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>abb14a5fb4142c54039b29e06cb14544a</anchor>
      <arglist>(ConnectionsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aa641440fa55c41c0226f8595a70d6e64</anchor>
      <arglist>(ConnectionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a584bc55cf9b3cb85af1b4cb36417ae8f</anchor>
      <arglist>(ConnectionGroupElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ac6e6cd296d99051cfbf14ace441fb5cf</anchor>
      <arglist>(LoopElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a31b982e503a4968d5add273f27ddc956</anchor>
      <arglist>(ConditionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a97d74fd4168ae1d41820d7a6c035691b</anchor>
      <arglist>(ExpressionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a4c7ead510b888c059eb07b569b99f13c</anchor>
      <arglist>(OperatorElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a1581fe20878acea3ae04ae1c1769481d</anchor>
      <arglist>(FunctionElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a9227458d1ad08d8bb3d6a7d23078b337</anchor>
      <arglist>(IdentElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a771af26539ab3291d4f429e2684313ba</anchor>
      <arglist>(LiteralElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a7c37fea3d8124c4647a8580e08160874</anchor>
      <arglist>(MsgFileElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a73785fd3d43a32e6846eb509b65b3dc2</anchor>
      <arglist>(NamespaceElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a865099d448997e4f1036f550192bf556</anchor>
      <arglist>(CplusplusElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a11869a76ee20f2d61c5ff692155c0ec2</anchor>
      <arglist>(StructDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a6ddbf8ec1dfbc72f2ea0b50ac786d885</anchor>
      <arglist>(ClassDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ad50cb1bc9e1d93e85a675cc8820713ba</anchor>
      <arglist>(MessageDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a5600eee12c6da14b7bba44780800e45c</anchor>
      <arglist>(PacketDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a381a4895c007aab1da3fdb8feef54811</anchor>
      <arglist>(EnumDeclElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ab838d3fb2d0611577bcacd467c3bcb95</anchor>
      <arglist>(EnumElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a8e96da116ce09487b9b983479545d7c9</anchor>
      <arglist>(EnumFieldsElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a674656a0d595b45e50396bc032ecace3</anchor>
      <arglist>(EnumFieldElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>acee9cb9455ef7c8f08974e2bf9e0c94e</anchor>
      <arglist>(MessageElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae841459dfe3fed4536e3934bbc130562</anchor>
      <arglist>(PacketElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>aac6806f034528090a1654780dc2da011</anchor>
      <arglist>(ClassElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae8f005db4ef1c729b3d86129b9798e1b</anchor>
      <arglist>(StructElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>a03b45a8cb6dfe8ea9b2880bed7da04c4</anchor>
      <arglist>(FieldElement *node)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDValidatorBase.html</anchorfile>
      <anchor>ae7475cb5fd75e034d0039435eef3fd64</anchor>
      <arglist>(UnknownElement *node)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NEDXMLGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>NEDXMLGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a51fa1b80d53263bf196adbc0743b4446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NEDXMLGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a5ddd4b73cbea78fb8b15f074485c8593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocationAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a869e3fb6355b8b2eb8d0172f0cf82070</anchor>
      <arglist>(bool srcloc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a9c6c8299ca03cc1e27e082f095dda0ca</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>ad480f7a24b750dca36994b10b203c725</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *tree)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a4839386e691539dcb1a6b9e4d272c9c0</anchor>
      <arglist>(NEDElement *tree)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printAttrValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a8198bcc6bf5e5386eba846f409568191</anchor>
      <arglist>(std::ostream &amp;out, const char *s)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doGenerate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>acc718a30e690ea8fc7dc8b0e7c591ef5</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, int level)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>printSrcLoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a150af864dd63d0e1002bdbd93def74fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NEDXMLGenerator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::OperatorElement</name>
    <filename>classomnetpp_1_1nedxml_1_1OperatorElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a296aac466c0ded4f55b0d3016ed313c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a9ea0f5f543de754946cce5ea2f82f1db</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a465ae21db0c3549c5dae95ba3cb648e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a47df2dbccfb3533874925d310c0f4502</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getNextOperatorSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ab71a3f7416b4947b64bbd92e92c73414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a296aac466c0ded4f55b0d3016ed313c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a9ea0f5f543de754946cce5ea2f82f1db</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a465ae21db0c3549c5dae95ba3cb648e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a47df2dbccfb3533874925d310c0f4502</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getNextOperatorSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>ab71a3f7416b4947b64bbd92e92c73414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OperatorElement *</type>
      <name>getFirstOperatorChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a35a00c9f0128b998fd94b09446988aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FunctionElement *</type>
      <name>getFirstFunctionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a2b4060bf5692136558010add7b9c3480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IdentElement *</type>
      <name>getFirstIdentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a81d53b5bc5668c9b5943a8f4f7f0e7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1OperatorElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PackageElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PackageElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a8de8880073ef423c0d731961c3cbd21e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ada77ad96818f48fbe5fa03b9559e4c9e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a319b7bdbeaef1a3dfb70cb04aeb16d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a6d48fb740e275725eed0eea885d00fd5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>getNextPackageSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a350fa82466a28a8e44deb908f0316b81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a8de8880073ef423c0d731961c3cbd21e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ada77ad96818f48fbe5fa03b9559e4c9e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PackageElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a319b7bdbeaef1a3dfb70cb04aeb16d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a6d48fb740e275725eed0eea885d00fd5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PackageElement *</type>
      <name>getNextPackageSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a350fa82466a28a8e44deb908f0316b81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PackageElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PacketDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a256953f496848e6ce0c124e88878c0a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a88356e28191eb4a3c5942e50cb34fbbb</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1e5ecdbc1b6b0c151571af938f2837b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a440d57822227a413a40b84debdb18e6f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>getNextPacketDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a14442e3555dc924dd8d0fa3e6ae74e01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a256953f496848e6ce0c124e88878c0a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a88356e28191eb4a3c5942e50cb34fbbb</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PacketDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1e5ecdbc1b6b0c151571af938f2837b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a440d57822227a413a40b84debdb18e6f</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketDeclElement *</type>
      <name>getNextPacketDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a14442e3555dc924dd8d0fa3e6ae74e01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PacketElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PacketElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a52adf722712d618af2928e5fd9e1c661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2422ff0d57f9183a7f1b0bc31c885438</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ae138098947d568098392eca1de69718c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a8bed8b31ba45cab206e143869c6f642a</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>getNextPacketSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a04d62dec6e2321ebac718a6a37ada679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a52adf722712d618af2928e5fd9e1c661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2422ff0d57f9183a7f1b0bc31c885438</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PacketElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ae138098947d568098392eca1de69718c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a8bed8b31ba45cab206e143869c6f642a</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PacketElement *</type>
      <name>getNextPacketSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a04d62dec6e2321ebac718a6a37ada679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PacketElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ParamElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ParamElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a65061ea739389ee2e2e6ac1c8afaedef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ac0e161ed945461624339a40b2b0978e3</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a928d7313cb998fb759fd23fbda4a48a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a95ba80349732542e7328cfc52e6a26d9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVolatile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a8d30a9ca83e5187cf20db06617cfc143</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVolatile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a6e977b671f4ff67e2eeffd7f65a18e8f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsPattern</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad6c6f664832fe471a817a7b092871619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsPattern</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2324c23b2806714a9342fd499aca12ef</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>getNextParamSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ac2b5fb31aedcc469fb87a1d4a98614d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a65061ea739389ee2e2e6ac1c8afaedef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ac0e161ed945461624339a40b2b0978e3</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParamElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a928d7313cb998fb759fd23fbda4a48a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a95ba80349732542e7328cfc52e6a26d9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a26716e2938d08d940f98c53e00c73f27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>af929bcea02271757ebceba2d838f2107</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsVolatile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a8d30a9ca83e5187cf20db06617cfc143</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsVolatile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a6e977b671f4ff67e2eeffd7f65a18e8f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a9ffb46026460eeca6c92afff0c9016d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a244d5ea96314c2da2e4fad9bd1f69f47</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsPattern</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ad6c6f664832fe471a817a7b092871619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsPattern</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a2324c23b2806714a9342fd499aca12ef</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>getNextParamSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>ac2b5fb31aedcc469fb87a1d4a98614d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParamElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ParametersElement</name>
    <filename>classomnetpp_1_1nedxml_1_1ParametersElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>aac2228b6f31dddbf4f5acd2e8f42531a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>aa232596559ccabe63740f2811b20cc83</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2dfaf2d9f0afacc8d81ccee089d8c37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a69501bc79c53dd2c9367f4256e808f6b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a100646e17e3d7b9f63cf8eaf85bac2b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a128a7763b1cde41d649a790d07218fe3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getNextParametersSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>abe7580ff4f02c04f42e1d160e469a6d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>getFirstParamChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>af4baac2219ad59ce8992c3a1be39b5b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>aac2228b6f31dddbf4f5acd2e8f42531a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>aa232596559ccabe63740f2811b20cc83</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2dfaf2d9f0afacc8d81ccee089d8c37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a69501bc79c53dd2c9367f4256e808f6b</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a100646e17e3d7b9f63cf8eaf85bac2b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a128a7763b1cde41d649a790d07218fe3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getNextParametersSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>abe7580ff4f02c04f42e1d160e469a6d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamElement *</type>
      <name>getFirstParamChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ParametersElement.html</anchorfile>
      <anchor>af4baac2219ad59ce8992c3a1be39b5b4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NEDResourceCache::PendingNedType</name>
    <filename>structomnetpp_1_1nedxml_1_1NEDResourceCache_1_1PendingNedType.html</filename>
    <member kind="function">
      <type></type>
      <name>PendingNedType</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>a0632e97e0383651e3556dec36385669f</anchor>
      <arglist>(const char *q, bool inner, NEDElement *e)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>qname</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>af9d3de1f7f9ff554ce07ad3fcfa22162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isInnerType</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>a06487fc0735f3275c43980ee03798b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NEDElement *</type>
      <name>node</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NEDResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>a120dfaf11fa912f1a0971595b714efd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PropertyDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a9835ba3ae8d7e3edc0f53409949691b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a68e27b787d4d386af2239ecc9cf76127</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a6a3ae94e9d86e115cbec99e784536070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ab229838f7865aff98509f25a6acdad5c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a882b1a46a53a9028b28352c5eeb9a237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a4cfefec54ddbc72b702a78b3a89c4a96</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getNextPropertyDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a3316f21871a505d2f9b68b2cf08e9ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getFirstPropertyKeyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ac2fb179720dd091ad92ca286d58c6e6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a9835ba3ae8d7e3edc0f53409949691b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a68e27b787d4d386af2239ecc9cf76127</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a6a3ae94e9d86e115cbec99e784536070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ab229838f7865aff98509f25a6acdad5c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a882b1a46a53a9028b28352c5eeb9a237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a4cfefec54ddbc72b702a78b3a89c4a96</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyDeclElement *</type>
      <name>getNextPropertyDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a3316f21871a505d2f9b68b2cf08e9ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getFirstPropertyKeyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>ac2fb179720dd091ad92ca286d58c6e6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyDeclElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PropertyElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PropertyElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a77d2df6d611146cd709cd75ec91cb80a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2d31a9f4105c8b3057349f253cbd9568</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a011e46b18455c9ecbc12d3a40ec26264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>adda085a215281893a0664dd09f9c47ad</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a100646e17e3d7b9f63cf8eaf85bac2b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a128a7763b1cde41d649a790d07218fe3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a758e0afc4cfef968c86eb947b0f41ac0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>afe4811ccd34a427a5238ba486568a856</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getNextPropertySibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>aaf946cb943add64a6fe52b3320dc1f9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getFirstPropertyKeyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ac2fb179720dd091ad92ca286d58c6e6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a77d2df6d611146cd709cd75ec91cb80a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2d31a9f4105c8b3057349f253cbd9568</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a011e46b18455c9ecbc12d3a40ec26264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>adda085a215281893a0664dd09f9c47ad</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a100646e17e3d7b9f63cf8eaf85bac2b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsImplicit</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a128a7763b1cde41d649a790d07218fe3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a758e0afc4cfef968c86eb947b0f41ac0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>afe4811ccd34a427a5238ba486568a856</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getNextPropertySibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>aaf946cb943add64a6fe52b3320dc1f9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getFirstPropertyKeyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyElement.html</anchorfile>
      <anchor>ac2fb179720dd091ad92ca286d58c6e6e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::PropertyKeyElement</name>
    <filename>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a5fd127f5f665465cbb856729da0a96a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a3f73b1f7cd046c34adbcc534022731ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a7b8f27311a5a70ea294daf155b180bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1f43b803b287a939a7208a139df4e3a2</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getNextPropertyKeySibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a8142980f3d9ea045b0576e8bfa93bb94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a5fd127f5f665465cbb856729da0a96a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a3f73b1f7cd046c34adbcc534022731ab</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyKeyElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a7b8f27311a5a70ea294daf155b180bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1f43b803b287a939a7208a139df4e3a2</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyKeyElement *</type>
      <name>getNextPropertyKeySibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a8142980f3d9ea045b0576e8bfa93bb94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LiteralElement *</type>
      <name>getFirstLiteralChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1PropertyKeyElement.html</anchorfile>
      <anchor>a6150e9f206ed0890a9625afbfbaf9dae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SAXHandler</name>
    <filename>classomnetpp_1_1nedxml_1_1SAXHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>SAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>ae873daa1954ae85484a02dd5b740527a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a3884a6ee295c58f7b92b36f9ed6d0b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a296e819984c9cbf1fbc44da31475e0e8</anchor>
      <arglist>(const char *name, const char **atts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a5786987ced1503bd08433f5cc3ae15b4</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a1e28bd9db67a7281dc4e4dd590ebf1aa</anchor>
      <arglist>(const char *s, int len)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>af8ea35b1e523b804ebccd5ac5b8f7c6e</anchor>
      <arglist>(const char *target, const char *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a4728ba3203606adce006057781277860</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>acb983561df1858e6fe0979026f92260b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>aea6ebe729dad53599a4c2dd650978e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a52555325a530438e98dfd466cd11520f</anchor>
      <arglist>(SAXParser *p)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SAXParser *</type>
      <name>parser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a0951bdf8a758fb2db0e8f9c5f234ac2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SAXParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a3cd7ce0b7fec1cd7725288547858a2e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SAXParser</name>
    <filename>classomnetpp_1_1nedxml_1_1SAXParser.html</filename>
    <member kind="function">
      <type></type>
      <name>SAXParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a015e9f05adb107778aa93aa998333eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a969970559209dc078fda4a4c4297aa9a</anchor>
      <arglist>(SAXHandler *sh)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a634b26d770aabe457469faecc4648a63</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a0d0a3cbb7dac70308389b1b365a73927</anchor>
      <arglist>(const char *content)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentLineNumber</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a1dc570abd7ada15d40ea45dddb1aa2eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getErrorMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>ae2be6b5758f827c64bae34f305485bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doParse</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a9d0710ef58a65d37aacb09c5544800fe</anchor>
      <arglist>(const char *filename, const char *content)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>errortext</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>ac19b886e1e27ea3f8ed7179e7ea666c0</anchor>
      <arglist>[512]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SAXHandler *</type>
      <name>saxhandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a493a9676a944fe45c5e7b1808c9a9e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>currentparser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>ab0ef889c789c970dcd059c9d43e288ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SimpleModuleElement</name>
    <filename>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2458f85f511698a846b5330db0cbd216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>abac7d2a91f0e649b06b0eafd9581625e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a56e0242392754db3d398a1d88b2e2f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a9b82d4a7c71a3f4d1136067793d4f5b1</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getNextSimpleModuleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ac900c88694e24036a9d6639acaa24a00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2458f85f511698a846b5330db0cbd216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>abac7d2a91f0e649b06b0eafd9581625e</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleModuleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a56e0242392754db3d398a1d88b2e2f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a9b82d4a7c71a3f4d1136067793d4f5b1</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getNextSimpleModuleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>ac900c88694e24036a9d6639acaa24a00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendsElement *</type>
      <name>getFirstExtendsChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a2a1e0cc9f744d20837896221297d3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual InterfaceNameElement *</type>
      <name>getFirstInterfaceNameChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>adb0093b7cbae93e02fe32452d2985088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SimpleModuleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::StructDeclElement</name>
    <filename>classomnetpp_1_1nedxml_1_1StructDeclElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2471bd86f3a24b1b8c7088afa646af3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ab63288ea19cd814f88fea5dff2b2c733</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>afd067648d16d1af80bae103dcdb0853b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a41f133704a50a5706bf62f5dd1ce97c9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>getNextStructDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a27bc80dd25ae561261c8397666f39b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2471bd86f3a24b1b8c7088afa646af3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ab63288ea19cd814f88fea5dff2b2c733</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StructDeclElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>afd067648d16d1af80bae103dcdb0853b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a41f133704a50a5706bf62f5dd1ce97c9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructDeclElement *</type>
      <name>getNextStructDeclSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a27bc80dd25ae561261c8397666f39b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructDeclElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::StructElement</name>
    <filename>classomnetpp_1_1nedxml_1_1StructElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a6cfede83c46d4918a97b179bb572c6a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>aa16ccc918d6281141de577d256072910</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a192440841d250661afba85e8b1148600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a892a7be13268a2de6d082c888e9978e9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>getNextStructSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a75904527bf9a876543ddc5bb7ceb32ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a6cfede83c46d4918a97b179bb572c6a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>aa16ccc918d6281141de577d256072910</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StructElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a192440841d250661afba85e8b1148600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a892a7be13268a2de6d082c888e9978e9</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a61660608f43e0232b2d8b0db127736a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>adb53c28545710206dd04d9357d0cfa17</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a83f7f95a308641f1e29308b68d7e50a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a7f74a40a58153bcf5daa08790174c438</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StructElement *</type>
      <name>getNextStructSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a75904527bf9a876543ddc5bb7ceb32ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PropertyElement *</type>
      <name>getFirstPropertyChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a1165e7a0b578761ab304d657d048a22b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FieldElement *</type>
      <name>getFirstFieldChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1StructElement.html</anchorfile>
      <anchor>a195601e03a733404a9f710fc7f8935f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SubmoduleElement</name>
    <filename>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a755d17e6e2c3fdc74b0cf033fe4bb908</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad2bae7794f1700447278c827bdc00ff5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a7c24d2056aafe7e95b381b94cae1ac34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a4cfd66ba413078b2376f2546373823a5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a17c4bf799368b86f2301e63ae2ce2a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a4920fe71328bd80d3dd1b0fbf6532b9d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>abdeec1770f9397182495c24c78b4ef8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a5aa1aca4c260b23976bc6f7ab37e053a</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>acfbc303f3e2c5bfd5d3bd8ad36353023</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a6bf0bb22874d423b9603591842b071c4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>getNextSubmoduleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ab1a9efe45481eb28016107c775b8e915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a755d17e6e2c3fdc74b0cf033fe4bb908</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad2bae7794f1700447278c827bdc00ff5</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a7c24d2056aafe7e95b381b94cae1ac34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a4cfd66ba413078b2376f2546373823a5</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a2ad8ebd431528d7f92ce9a2fa14ccb34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a341b1d3f16cd19dbd47c3a7198c0f90d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a17c4bf799368b86f2301e63ae2ce2a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a4920fe71328bd80d3dd1b0fbf6532b9d</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>abdeec1770f9397182495c24c78b4ef8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a5aa1aca4c260b23976bc6f7ab37e053a</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>acfbc303f3e2c5bfd5d3bd8ad36353023</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLikeExpr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a6bf0bb22874d423b9603591842b071c4</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>afe24fa9a915d1385c40bc9355285e628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>af3cc3fd1c33945ba1d9ac15a0bb134ee</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>aa99d2a170bcf46ed5249ea0233651d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVectorSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ad2b2728e43ec1c8625d2d6d8c913e2f7</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>getNextSubmoduleSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>ab1a9efe45481eb28016107c775b8e915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExpressionElement *</type>
      <name>getFirstExpressionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a92e6709b8e6108cb4ea9a310c1eb6144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConditionElement *</type>
      <name>getFirstConditionChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a35fccf2a74ca1b22cc369af498305b5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParametersElement *</type>
      <name>getFirstParametersChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a118b260095e43459e6b2b11e11ed11be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GatesElement *</type>
      <name>getFirstGatesChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmoduleElement.html</anchorfile>
      <anchor>a72c6cfa67c8b9dbfdb906b72e1a43e20</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SubmodulesElement</name>
    <filename>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a198d5b5cfaabe3064cc39c638a80c052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a81afca0b7ad574ba8102d18742c86ec0</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a237791ef002647299f74b0e0a71d78a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a755d79b412c5cf43b2f82e8c96babb94</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>getNextSubmodulesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a21d51380afa2ba5755ca7a6bb671e924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>getFirstSubmoduleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a3824c6385d22bf3304f119ef2abf54e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a198d5b5cfaabe3064cc39c638a80c052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a81afca0b7ad574ba8102d18742c86ec0</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a237791ef002647299f74b0e0a71d78a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a755d79b412c5cf43b2f82e8c96babb94</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmodulesElement *</type>
      <name>getNextSubmodulesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a21d51380afa2ba5755ca7a6bb671e924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SubmoduleElement *</type>
      <name>getFirstSubmoduleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SubmodulesElement.html</anchorfile>
      <anchor>a3824c6385d22bf3304f119ef2abf54e0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::MsgCppGenerator::TypeDesc</name>
    <filename>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>nedTypeName</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</anchorfile>
      <anchor>adae9ed8205200cdb11ceb4571ba6f7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>cppTypeName</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</anchorfile>
      <anchor>a8f5d50c2704206d641d56fcc02be52ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fromstring</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</anchorfile>
      <anchor>a00da220992e51ddaa3f47853b97e4da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>tostring</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</anchorfile>
      <anchor>a3f42e9438dd357ca62cdd4abfbbd47d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>emptyValue</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCppGenerator_1_1TypeDesc.html</anchorfile>
      <anchor>a2dbee707f468cd722945a7ba4bf4dd19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::TypesElement</name>
    <filename>classomnetpp_1_1nedxml_1_1TypesElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>aee3c561aa733d376cc98737e98564ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ac1de0c9326f7964b3e397a7268f07f71</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a221d7bf18816bfd24eca48c9c68d72aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2bf71cb64d30b14b52978fd10d31d328</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>getNextTypesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a017e3916a4c8a51a7e040339c3eedb06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getFirstChannelChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a190a1939d5060860ce3e89a1e1d6a909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getFirstChannelInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a72f584be8ffd6f3c9fce624233a5db5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getFirstSimpleModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a96c594f97fbe15607b3af5582ca5643f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getFirstCompoundModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a4487ff3816621d813849226ce335523c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getFirstModuleInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a111253aed20662582df96d4416ca17f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>aee3c561aa733d376cc98737e98564ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ac1de0c9326f7964b3e397a7268f07f71</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a221d7bf18816bfd24eca48c9c68d72aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a2bf71cb64d30b14b52978fd10d31d328</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TypesElement *</type>
      <name>getNextTypesSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a017e3916a4c8a51a7e040339c3eedb06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommentElement *</type>
      <name>getFirstCommentChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a1586253dbc8451ba633b89424f32d237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelElement *</type>
      <name>getFirstChannelChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a190a1939d5060860ce3e89a1e1d6a909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ChannelInterfaceElement *</type>
      <name>getFirstChannelInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a72f584be8ffd6f3c9fce624233a5db5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SimpleModuleElement *</type>
      <name>getFirstSimpleModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a96c594f97fbe15607b3af5582ca5643f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CompoundModuleElement *</type>
      <name>getFirstCompoundModuleChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a4487ff3816621d813849226ce335523c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModuleInterfaceElement *</type>
      <name>getFirstModuleInterfaceChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1TypesElement.html</anchorfile>
      <anchor>a111253aed20662582df96d4416ca17f8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::UnknownElement</name>
    <filename>classomnetpp_1_1nedxml_1_1UnknownElement.html</filename>
    <base>omnetpp::nedxml::NEDElement</base>
    <member kind="function">
      <type></type>
      <name>UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>abf3ba39033cad95781b3cd808bf4e07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>add97a56076fec98de30856d3d5a67982</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a45d44882c63b5ecb529f21e898c49352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UnknownElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a0f7c52d409286d58d3cb047ae2ddb339</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a7abac73bb4678d45fe15cc263298a4d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>acb4e57c4a25b3fe78ae7b09886d7c5b1</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UnknownElement *</type>
      <name>getNextUnknownSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a0eb83cb95bfa5de16314d264a4b46e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>abf3ba39033cad95781b3cd808bf4e07a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>add97a56076fec98de30856d3d5a67982</anchor>
      <arglist>(NEDElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UnknownElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a45d44882c63b5ecb529f21e898c49352</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ab85bfc57e78e21f9f572117b652dfdee</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a7feb251862b4b3ca31a7fcc32734ca3c</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a303cd3284a0e702b8c16ed57abb941c3</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a2fc9a79c270c612e02dafd6fd431bc6e</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ad339beadb3871cb6b634305b005c862b</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>ad00ce38f5d073abf7d545486da6bed52</anchor>
      <arglist>(const char *name) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a2d2334973f9de1dca0dafcb843d82d74</anchor>
      <arglist>(int k, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a1de87ec72e38dcf3a9a4d5c9688d0ea2</anchor>
      <arglist>(const char *name, const char *val) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a9580cf145f823448fff8134d3faaa8fb</anchor>
      <arglist>(int k) const  override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UnknownElement *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a0f7c52d409286d58d3cb047ae2ddb339</anchor>
      <arglist>() const  override</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a7abac73bb4678d45fe15cc263298a4d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>acb4e57c4a25b3fe78ae7b09886d7c5b1</anchor>
      <arglist>(const char *val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UnknownElement *</type>
      <name>getNextUnknownSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UnknownElement.html</anchorfile>
      <anchor>a0eb83cb95bfa5de16314d264a4b46e12</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>omnetpp</name>
    <filename>namespaceomnetpp.html</filename>
    <namespace>omnetpp::common</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="namespace">
    <name>omnetpp::common</name>
    <filename>namespaceomnetpp_1_1common.html</filename>
  </compound>
  <compound kind="namespace">
    <name>omnetpp::nedxml</name>
    <filename>namespaceomnetpp_1_1nedxml.html</filename>
    <class kind="class">omnetpp::nedxml::ChannelElement</class>
    <class kind="class">omnetpp::nedxml::ChannelInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::ClassDeclElement</class>
    <class kind="class">omnetpp::nedxml::ClassElement</class>
    <class kind="class">omnetpp::nedxml::CommentElement</class>
    <class kind="class">omnetpp::nedxml::CompoundModuleElement</class>
    <class kind="class">omnetpp::nedxml::ConditionElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionGroupElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionsElement</class>
    <class kind="class">omnetpp::nedxml::CplusplusElement</class>
    <class kind="class">omnetpp::nedxml::DisplayStringUtil</class>
    <class kind="class">omnetpp::nedxml::EnumDeclElement</class>
    <class kind="class">omnetpp::nedxml::EnumElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldsElement</class>
    <class kind="class">omnetpp::nedxml::ExpressionElement</class>
    <class kind="class">omnetpp::nedxml::ExtendsElement</class>
    <class kind="class">omnetpp::nedxml::FieldElement</class>
    <class kind="class">omnetpp::nedxml::FilesElement</class>
    <class kind="class">omnetpp::nedxml::FunctionElement</class>
    <class kind="class">omnetpp::nedxml::GateElement</class>
    <class kind="class">omnetpp::nedxml::GatesElement</class>
    <class kind="class">omnetpp::nedxml::IdentElement</class>
    <class kind="class">omnetpp::nedxml::ImportElement</class>
    <class kind="class">omnetpp::nedxml::InterfaceNameElement</class>
    <class kind="struct">omnetpp::nedxml::LineColumn</class>
    <class kind="class">omnetpp::nedxml::LiteralElement</class>
    <class kind="class">omnetpp::nedxml::LoopElement</class>
    <class kind="class">omnetpp::nedxml::MessageDeclElement</class>
    <class kind="class">omnetpp::nedxml::MessageElement</class>
    <class kind="class">omnetpp::nedxml::ModuleInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator</class>
    <class kind="struct">omnetpp::nedxml::MsgCppGeneratorOptions</class>
    <class kind="class">omnetpp::nedxml::MsgFileElement</class>
    <class kind="class">omnetpp::nedxml::NamespaceElement</class>
    <class kind="class">omnetpp::nedxml::NED1Generator</class>
    <class kind="class">omnetpp::nedxml::NED2Generator</class>
    <class kind="class">omnetpp::nedxml::NEDCrossValidator</class>
    <class kind="class">omnetpp::nedxml::NEDDTDValidator</class>
    <class kind="class">omnetpp::nedxml::NEDDTDValidatorBase</class>
    <class kind="class">omnetpp::nedxml::NEDElement</class>
    <class kind="class">omnetpp::nedxml::NEDElementFactory</class>
    <class kind="class">omnetpp::nedxml::NEDElementUserData</class>
    <class kind="class">omnetpp::nedxml::NEDElementUtil</class>
    <class kind="class">omnetpp::nedxml::NEDErrorStore</class>
    <class kind="class">omnetpp::nedxml::NEDException</class>
    <class kind="class">omnetpp::nedxml::NEDFileBuffer</class>
    <class kind="class">omnetpp::nedxml::NedFileElement</class>
    <class kind="struct">omnetpp::nedxml::NEDLookupContext</class>
    <class kind="class">omnetpp::nedxml::NEDParser</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache</class>
    <class kind="class">omnetpp::nedxml::NEDSAXHandler</class>
    <class kind="struct">omnetpp::nedxml::NEDSourceRegion</class>
    <class kind="class">omnetpp::nedxml::NEDSyntaxValidator</class>
    <class kind="class">omnetpp::nedxml::NEDTools</class>
    <class kind="class">omnetpp::nedxml::NEDTypeInfo</class>
    <class kind="class">omnetpp::nedxml::NEDValidatorBase</class>
    <class kind="class">omnetpp::nedxml::NEDXMLGenerator</class>
    <class kind="class">omnetpp::nedxml::OperatorElement</class>
    <class kind="class">omnetpp::nedxml::PackageElement</class>
    <class kind="class">omnetpp::nedxml::PacketDeclElement</class>
    <class kind="class">omnetpp::nedxml::PacketElement</class>
    <class kind="class">omnetpp::nedxml::ParamElement</class>
    <class kind="class">omnetpp::nedxml::ParametersElement</class>
    <class kind="class">omnetpp::nedxml::PropertyDeclElement</class>
    <class kind="class">omnetpp::nedxml::PropertyElement</class>
    <class kind="class">omnetpp::nedxml::PropertyKeyElement</class>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <class kind="class">omnetpp::nedxml::SimpleModuleElement</class>
    <class kind="class">omnetpp::nedxml::StructDeclElement</class>
    <class kind="class">omnetpp::nedxml::StructElement</class>
    <class kind="class">omnetpp::nedxml::SubmoduleElement</class>
    <class kind="class">omnetpp::nedxml::SubmodulesElement</class>
    <class kind="class">omnetpp::nedxml::TypesElement</class>
    <class kind="class">omnetpp::nedxml::UnknownElement</class>
    <member kind="enumeration">
      <type></type>
      <name>NEDElementCode</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>gad34cccc2e635c441d3d7721c4c15b68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NULL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cabe4646866ad678f9c06fbf48b783db6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FILES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf0f52ccf1b604c247dfd73bba385986e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NED_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca47a8aaf0e028d7dc9ef6e84686599af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMMENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7828180a7f2a34640cadbe66a5d47627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa1665af429b2e65889485610c0c8f03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IMPORT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac0d4ebcbad2ba024f9aa2a3459f44d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca21d8117c33e31fdfd783e500853a95c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXTENDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caacd830bed1d6264625102f079aeecd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_INTERFACE_NAME</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b478e073c3996bd6ce9abf5dd79362f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SIMPLE_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca24308b4324187beac81e6920d09d31fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MODULE_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca507c7aae391e1d68cb5d0e4796b5ff72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMPOUND_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2f52963e4eb44e8aff5e3dd3707766cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac4af69096a9ba2c0138354b0aaaf8708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa5d202195e740e8da772a6e109f70d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAMETERS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf9976d938ac9fc3a79ada698de026cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cab54508e039787e6f0398f384430dc08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca366803979f7e863f328a2fc32d282e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_KEY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca3cf06ea94e252f4a2bd979abf980c48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca28227565427af0c833a5bee75ef5d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca12bb7f956774de679e41dc75e4d540df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_TYPES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad8caee31b25cf157b5c4172b6bbb2ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca15ca0c9a2e2b66624bb6775019c7324b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca737cb9551d7e0f206a95594b9b4e51ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTIONS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca91040a6621bfc3dd6d6a1d49251b97c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca5a4b3bae4f85c56101b612c59d62a7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION_GROUP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2cb06aa76da0aeabcb0d93f6063e4633</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LOOP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca80bfe03698c5c33da499c0e3b2e7681b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONDITION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa4146926cf4f987508391391ddda2acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXPRESSION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca734f944e9aff83bbc91a0955b1897e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_OPERATOR</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf527a555c91f595c4d8a87031e9a6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FUNCTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca67c8ebfe2cdba16710b755fabd957b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IDENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7af94c708923ef46195eb3f40a09e03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LITERAL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac5e0fa7b1aeec2c9c8e4db12d4a32404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MSG_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf6fc54e776c962a70d5ab05c4bcfd235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NAMESPACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae80473c92c631ca07aaffc356c185ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CPLUSPLUS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca580edeb93570c921dd22b3aefab4cd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad70d3465bf52a059f19f75b77882008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b9f948df5d9953eda28c4b599225041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca02f84cd957697624b7c37400ba00dc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae9151e7150e9363c89623c54781febb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caabeb508e148820edf30d11819ac5df76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2fe992d1dde8aeabc148e00701be03a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8e14996df6f58540dbd1627654aef3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca50b0047b9bb5b428cc5cad20b99bc099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca66d2f84f9f6159edd967a14f7c27b4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca78f7289e11ee7d4ae6a3e8c3bf6fb554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca9e9eee707e30a18866aa3827671383ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca6671693f35af380e17da8157cb10f11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caefe111337aad0cad283a278378f7f34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_UNKNOWN</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2dc1887831f5e3d5c57cd37acdccfda9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55baddc93c6d17fe5056f8a08f1c8b1c8ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_INPUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba3f29225c8c18a7e8f9612e9518e35a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_OUTPUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55bad98092bff8686d2464b6216df202f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATETYPE_INOUT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba78dda7dc6c9cab7eacc0b04de92273bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a6c803a9657f3b88598155388718c45b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_DOUBLE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ad481bd89f4c26ee6215e5259e12c3ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_INT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a602f12db367b0c3879efeb8ede9aae77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_STRING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7abc2a3ef2d905dbb441a4fe52d95feb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_BOOL</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a86271c25a5226dd65799813fb9ee2629</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARTYPE_XML</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a31b537139690df8fc663343025830602</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_DOUBLE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a4c5c7abb8b0ae2bff596fead502481ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_QUANTITY</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a66de7ddaa292012f2e8dd277e59438a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_INT</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5ad20b6bcc27f89550849690a374896c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_STRING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a81770be78156b5091a33b36be0561642</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_BOOL</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a14618ce2c296116b27fe55ce16205471</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONST_SPEC</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a6818fe8b578886df4111aff4b4ffd1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_NONE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a297f4f23a51b635f4ff5fb4575fd0c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_I</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ac0fe700641987bf288bd1401094942c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBGATE_O</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a9b5c0bac32933d8b94d11e10f088ef6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NEDErrorSeverity</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_INFO</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2a3f3429cc5bd2ea8ce12263aef262e4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_WARNING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2a92ad38b5a0446297cb6369ee7bc8aa03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SEVERITY_ERROR</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af6464d0b1719609aa654b7360a7059c2ab052432f61d253ff06eae674eda8f765</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED1</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga3d51ffda31140e8339cfcc67fc45803a</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED2</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga0e3c2ce8d0c00ac1180fac09bb09d4b7</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NEDInternalError</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a2369c65a4d77ae55f51f543bd362bd58</anchor>
      <arglist>(const char *file, int line, NEDElement *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API NEDElement *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>gae24f7d5af60258b02d76bfc815d771ea</anchor>
      <arglist>(const char *filename, NEDErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>slashifyFilename</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a850d36b8df17da7ecc7954c53cbd6c32</anchor>
      <arglist>(const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>currentLocation</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22bafbd26472b89c71faa85ac9e36db7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>createElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3bef42111284a2de378960e6a7801e49</anchor>
      <arglist>(int tagcode, NEDElement *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>getOrCreateElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ace8166859d80bba935e00200bcc5eec0</anchor>
      <arglist>(int tagcode, NEDElement *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a329acfedfacff2fd2afd537ba5224116</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a86a7e4cfe83bb989591e7564195b2ce6</anchor>
      <arglist>(NEDElement *node, YYLTYPE firstpos, YYLTYPE lastpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3a08276355512c8fd69cf2c8dbf5ce10</anchor>
      <arglist>(NEDElement *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addComponentProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a83ae6a41f2ba89e947dcfa72719c8a5c</anchor>
      <arglist>(NEDElement *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3186d66f90d4dea30e7fb7992a8622d7</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeComponentSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad7a8b1c9615c454272a230d5fa4b4f54</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>setIsNetworkProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad60796bb2e2e2051ed58e168bbd63bee</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ae08014437fc837fdf47cafd5802d9299</anchor>
      <arglist>(NEDElement *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af41da95c451c1ebb065d47df592d1fe1</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad23fdb59629bc3b5cea32c5ff6a391e5</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aabd63228de51930069419733aff45ad7</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a808f8c17bb7ce31000dc3681f02d8df4</anchor>
      <arglist>(NEDElement *node, YYLTYPE tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a1c676740a6e3db18822ec8b448b49f49</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a45b61d4275298831100c3af15990cf00</anchor>
      <arglist>(NEDElement *node, YYLTYPE firstpos, YYLTYPE lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa56d39418478a386862fba0997343b31</anchor>
      <arglist>(NEDElement *node, YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a8ae273c336597a3a4b4e74d3c9fdc24f</anchor>
      <arglist>(NEDElement *params, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a473cbb45abad4850b8575fe7d1fa8ca4</anchor>
      <arglist>(NEDElement *params, const char *name, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>addGate</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa1d8979cc4add39e567dd5a4daee65e0</anchor>
      <arglist>(NEDElement *gates, YYLTYPE namepos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>trimQuotes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a82e51dae0f24d26f6a1f3862d4685be5</anchor>
      <arglist>(YYLTYPE vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>trimDoubleBraces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a24193a4479038050360345a5a05d037e</anchor>
      <arglist>(YYLTYPE vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapAttributes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ac2a43316a2ae8e0b402d90ce5fa5c36b</anchor>
      <arglist>(NEDElement *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapExpressionChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad8f679c224e34d71c3e141661df413cc</anchor>
      <arglist>(NEDElement *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapConnection</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aebfce480d0a88334ab8fb7176833ee71</anchor>
      <arglist>(NEDElement *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transferChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af32f72e4c3adecd830288a843b1de924</anchor>
      <arglist>(NEDElement *from, NEDElement *to)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abe65d18d0fcfc1e982b60d5b64d47193</anchor>
      <arglist>(YYLTYPE)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22be248d77562934acd27795fe9dd2e9</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>removeSpaces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39fdcb02d7971f227e00743ffb2ce4d8</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>ExpressionElement *</type>
      <name>createExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a4ad0a4866d657cebbcbb5b2cdc1b3b70</anchor>
      <arglist>(NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>OperatorElement *</type>
      <name>createOperator</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ab0eab99c85fc3b9540c1b7084e7c8545</anchor>
      <arglist>(const char *op, NEDElement *operand1, NEDElement *operand2=nullptr, NEDElement *operand3=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>FunctionElement *</type>
      <name>createFunction</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a8f1829d949fd666b302972b875f6c0bd</anchor>
      <arglist>(const char *funcname, NEDElement *arg1=nullptr, NEDElement *arg2=nullptr, NEDElement *arg3=nullptr, NEDElement *arg4=nullptr, NEDElement *arg5=nullptr, NEDElement *arg6=nullptr, NEDElement *arg7=nullptr, NEDElement *arg8=nullptr, NEDElement *arg9=nullptr, NEDElement *arg10=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a473bf81dbf81385e036990bf7ac7a44d</anchor>
      <arglist>(YYLTYPE parampos)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ae75531ff4b6421bee1829d23f227e615</anchor>
      <arglist>(YYLTYPE parampos, YYLTYPE modulepos, NEDElement *moduleindexoperand=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a1b3fea658917de0aec89740a646f12d5</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a242197f192f8eaed3e3b29f25cf33297</anchor>
      <arglist>(int type, YYLTYPE valuepos, YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>afbb03a633debfe8e614d92867d3772e8</anchor>
      <arglist>(int type, const char *value, const char *text)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createStringLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aa08d2b41b845a90f57c6e8edca7e4772</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createQuantityLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a6927e551e3023a7e1d4314efccb6b0e7</anchor>
      <arglist>(YYLTYPE textpos)</arglist>
    </member>
    <member kind="function">
      <type>NEDElement *</type>
      <name>unaryMinus</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad45b7972f04e9223cbab0cb8c351bfd5</anchor>
      <arglist>(NEDElement *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOptionalExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a428d3c4e4bde8b7e3494677a23392bcd</anchor>
      <arglist>(NEDElement *elem, const char *attrname, YYLTYPE exprpos, NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39f375e05157f88be906e23d673b37a0</anchor>
      <arglist>(NEDElement *elem, const char *attrname, YYLTYPE exprpos, NEDElement *expr)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertBackgroundDisplayString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22e486bff07b8358b984d6ea66676012</anchor>
      <arglist>(const char *old)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad2c745ca8599b0dc2181d04d0ebd7885</anchor>
      <arglist>(YYLTYPE pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>makeYYLTYPE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3553d2a8bdf75bdc53db0dee9a0d09f2</anchor>
      <arglist>(int fl, int fc, int ll, int lc)</arglist>
    </member>
    <member kind="function">
      <type>YYLTYPE</type>
      <name>makeEmptyYYLTYPE</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a6bb28c0404c9cf12394f01a2b58f96ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaf249324dc4a8031a96082e8877383767</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaa8bd302f2653ee5362ca848b5865da6d</anchor>
      <arglist>(NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="variable">
      <type>NEDParser *</type>
      <name>np</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a497ba1b155bd1ff3551bccd03fa86cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>pos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5db42ac8af5c08f937049e91e174b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>prevpos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad503b230caf787844066a886e5e6ebe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Overview</name>
    <title>Overview</title>
    <filename>group__Overview.html</filename>
  </compound>
  <compound kind="group">
    <name>Example</name>
    <title>Example</title>
    <filename>group__Example.html</filename>
  </compound>
  <compound kind="group">
    <name>DTD</name>
    <title>DTD</title>
    <filename>group__DTD.html</filename>
  </compound>
  <compound kind="group">
    <name>Data</name>
    <title>Data classes</title>
    <filename>group__Data.html</filename>
    <class kind="class">omnetpp::nedxml::NEDElementUserData</class>
    <class kind="struct">omnetpp::nedxml::NEDSourceRegion</class>
    <class kind="class">omnetpp::nedxml::NEDElement</class>
    <class kind="class">omnetpp::nedxml::FilesElement</class>
    <class kind="class">omnetpp::nedxml::NedFileElement</class>
    <class kind="class">omnetpp::nedxml::CommentElement</class>
    <class kind="class">omnetpp::nedxml::PackageElement</class>
    <class kind="class">omnetpp::nedxml::ImportElement</class>
    <class kind="class">omnetpp::nedxml::PropertyDeclElement</class>
    <class kind="class">omnetpp::nedxml::ExtendsElement</class>
    <class kind="class">omnetpp::nedxml::InterfaceNameElement</class>
    <class kind="class">omnetpp::nedxml::SimpleModuleElement</class>
    <class kind="class">omnetpp::nedxml::ModuleInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::CompoundModuleElement</class>
    <class kind="class">omnetpp::nedxml::ChannelInterfaceElement</class>
    <class kind="class">omnetpp::nedxml::ChannelElement</class>
    <class kind="class">omnetpp::nedxml::ParametersElement</class>
    <class kind="class">omnetpp::nedxml::ParamElement</class>
    <class kind="class">omnetpp::nedxml::PropertyElement</class>
    <class kind="class">omnetpp::nedxml::PropertyKeyElement</class>
    <class kind="class">omnetpp::nedxml::GatesElement</class>
    <class kind="class">omnetpp::nedxml::GateElement</class>
    <class kind="class">omnetpp::nedxml::TypesElement</class>
    <class kind="class">omnetpp::nedxml::SubmodulesElement</class>
    <class kind="class">omnetpp::nedxml::SubmoduleElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionsElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionElement</class>
    <class kind="class">omnetpp::nedxml::ConnectionGroupElement</class>
    <class kind="class">omnetpp::nedxml::LoopElement</class>
    <class kind="class">omnetpp::nedxml::ConditionElement</class>
    <class kind="class">omnetpp::nedxml::ExpressionElement</class>
    <class kind="class">omnetpp::nedxml::OperatorElement</class>
    <class kind="class">omnetpp::nedxml::FunctionElement</class>
    <class kind="class">omnetpp::nedxml::IdentElement</class>
    <class kind="class">omnetpp::nedxml::LiteralElement</class>
    <class kind="class">omnetpp::nedxml::MsgFileElement</class>
    <class kind="class">omnetpp::nedxml::NamespaceElement</class>
    <class kind="class">omnetpp::nedxml::CplusplusElement</class>
    <class kind="class">omnetpp::nedxml::StructDeclElement</class>
    <class kind="class">omnetpp::nedxml::ClassDeclElement</class>
    <class kind="class">omnetpp::nedxml::MessageDeclElement</class>
    <class kind="class">omnetpp::nedxml::PacketDeclElement</class>
    <class kind="class">omnetpp::nedxml::EnumDeclElement</class>
    <class kind="class">omnetpp::nedxml::EnumElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldsElement</class>
    <class kind="class">omnetpp::nedxml::EnumFieldElement</class>
    <class kind="class">omnetpp::nedxml::MessageElement</class>
    <class kind="class">omnetpp::nedxml::PacketElement</class>
    <class kind="class">omnetpp::nedxml::ClassElement</class>
    <class kind="class">omnetpp::nedxml::StructElement</class>
    <class kind="class">omnetpp::nedxml::FieldElement</class>
    <class kind="class">omnetpp::nedxml::UnknownElement</class>
    <class kind="class">omnetpp::nedxml::NEDElementFactory</class>
    <member kind="enumeration">
      <type></type>
      <name>NEDElementCode</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>gad34cccc2e635c441d3d7721c4c15b68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NULL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cabe4646866ad678f9c06fbf48b783db6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FILES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf0f52ccf1b604c247dfd73bba385986e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NED_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca47a8aaf0e028d7dc9ef6e84686599af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMMENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7828180a7f2a34640cadbe66a5d47627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa1665af429b2e65889485610c0c8f03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IMPORT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac0d4ebcbad2ba024f9aa2a3459f44d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca21d8117c33e31fdfd783e500853a95c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXTENDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caacd830bed1d6264625102f079aeecd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_INTERFACE_NAME</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b478e073c3996bd6ce9abf5dd79362f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SIMPLE_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca24308b4324187beac81e6920d09d31fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MODULE_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca507c7aae391e1d68cb5d0e4796b5ff72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_COMPOUND_MODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2f52963e4eb44e8aff5e3dd3707766cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL_INTERFACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac4af69096a9ba2c0138354b0aaaf8708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CHANNEL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa5d202195e740e8da772a6e109f70d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAMETERS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf9976d938ac9fc3a79ada698de026cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PARAM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cab54508e039787e6f0398f384430dc08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca366803979f7e863f328a2fc32d282e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PROPERTY_KEY</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca3cf06ea94e252f4a2bd979abf980c48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca28227565427af0c833a5bee75ef5d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_GATE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca12bb7f956774de679e41dc75e4d540df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_TYPES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad8caee31b25cf157b5c4172b6bbb2ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULES</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca15ca0c9a2e2b66624bb6775019c7324b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_SUBMODULE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca737cb9551d7e0f206a95594b9b4e51ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTIONS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca91040a6621bfc3dd6d6a1d49251b97c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca5a4b3bae4f85c56101b612c59d62a7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONNECTION_GROUP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2cb06aa76da0aeabcb0d93f6063e4633</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LOOP</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca80bfe03698c5c33da499c0e3b2e7681b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CONDITION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caa4146926cf4f987508391391ddda2acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_EXPRESSION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca734f944e9aff83bbc91a0955b1897e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_OPERATOR</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf527a555c91f595c4d8a87031e9a6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FUNCTION</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca67c8ebfe2cdba16710b755fabd957b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_IDENT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca7af94c708923ef46195eb3f40a09e03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_LITERAL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cac5e0fa7b1aeec2c9c8e4db12d4a32404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MSG_FILE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caf6fc54e776c962a70d5ab05c4bcfd235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_NAMESPACE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae80473c92c631ca07aaffc356c185ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CPLUSPLUS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca580edeb93570c921dd22b3aefab4cd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cad70d3465bf52a059f19f75b77882008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8b9f948df5d9953eda28c4b599225041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca02f84cd957697624b7c37400ba00dc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68cae9151e7150e9363c89623c54781febb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_DECL</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caabeb508e148820edf30d11819ac5df76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2fe992d1dde8aeabc148e00701be03a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELDS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca8e14996df6f58540dbd1627654aef3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_ENUM_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca50b0047b9bb5b428cc5cad20b99bc099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_MESSAGE</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca66d2f84f9f6159edd967a14f7c27b4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_PACKET</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca78f7289e11ee7d4ae6a3e8c3bf6fb554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_CLASS</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca9e9eee707e30a18866aa3827671383ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_STRUCT</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca6671693f35af380e17da8157cb10f11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_FIELD</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68caefe111337aad0cad283a278378f7f34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NED_UNKNOWN</name>
      <anchorfile>group__Data.html</anchorfile>
      <anchor>ggad34cccc2e635c441d3d7721c4c15b68ca2dc1887831f5e3d5c57cd37acdccfda9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NEDParser</name>
    <title>NED Parsing</title>
    <filename>group__NEDParser.html</filename>
    <class kind="class">omnetpp::nedxml::NEDFileBuffer</class>
    <class kind="class">omnetpp::nedxml::NEDParser</class>
  </compound>
  <compound kind="group">
    <name>XMLParser</name>
    <title>XML Parsing</title>
    <filename>group__XMLParser.html</filename>
    <class kind="class">omnetpp::nedxml::NEDSAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <member kind="function">
      <type>NEDXML_API NEDElement *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>gae24f7d5af60258b02d76bfc815d771ea</anchor>
      <arglist>(const char *filename, NEDErrorStore *errors)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>XMLGenerator</name>
    <title>Generating XML</title>
    <filename>group__XMLGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::NEDXMLGenerator</class>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaf249324dc4a8031a96082e8877383767</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gaa8bd302f2653ee5362ca848b5865da6d</anchor>
      <arglist>(NEDElement *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Validation</name>
    <title>Validation</title>
    <filename>group__Validation.html</filename>
    <class kind="class">omnetpp::nedxml::NEDCrossValidator</class>
    <class kind="class">omnetpp::nedxml::NEDDTDValidator</class>
    <class kind="class">omnetpp::nedxml::NEDDTDValidatorBase</class>
    <class kind="class">omnetpp::nedxml::NEDSyntaxValidator</class>
    <class kind="class">omnetpp::nedxml::NEDTools</class>
    <class kind="class">omnetpp::nedxml::NEDValidatorBase</class>
  </compound>
  <compound kind="group">
    <name>NEDResources</name>
    <title>NED Resources</title>
    <filename>group__NEDResources.html</filename>
    <class kind="struct">omnetpp::nedxml::NEDLookupContext</class>
    <class kind="class">omnetpp::nedxml::NEDResourceCache</class>
    <class kind="class">omnetpp::nedxml::NEDTypeInfo</class>
  </compound>
  <compound kind="group">
    <name>NEDGenerator</name>
    <title>Generating NED</title>
    <filename>group__NEDGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::NED1Generator</class>
    <class kind="class">omnetpp::nedxml::NED2Generator</class>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED1</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga3d51ffda31140e8339cfcc67fc45803a</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNED2</name>
      <anchorfile>group__NEDGenerator.html</anchorfile>
      <anchor>ga0e3c2ce8d0c00ac1180fac09bb09d4b7</anchor>
      <arglist>(std::ostream &amp;out, NEDElement *node, NEDErrorStore *e)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CppGenerator</name>
    <title>Generating C++ code</title>
    <filename>group__CppGenerator.html</filename>
    <class kind="struct">omnetpp::nedxml::MsgCppGeneratorOptions</class>
    <class kind="class">omnetpp::nedxml::MsgCppGenerator</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>OMNeT++ NEDXML API Reference</title>
    <filename>index</filename>
  </compound>
</tagfile>
